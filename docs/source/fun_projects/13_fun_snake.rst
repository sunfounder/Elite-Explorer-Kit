.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _fun_snake:

JEU - Snake
=========================

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/fun_projects/13_fun_snake.mp4"  type="video/mp4">
      Votre navigateur ne supporte pas la balise vid√©o.
   </video>

Cet exemple impl√©mente le jeu classique Snake sur une matrice LED 8x12 en utilisant la carte R4 Wifi.
Les joueurs contr√¥lent la direction du serpent √† l'aide d'un joystick √† double axe.

**Composants n√©cessaires**

Dans ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_joystick`
        - |link_joystick_buy|

**C√¢blage**

.. image:: img/13_snake_bb.png
    :width: 80%
    :align: center


**Sch√©ma**

.. image:: img/13_snake_schematic.png
   :width: 80%
   :align: center


**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``13_snake.ino`` sous le chemin ``elite-explorer-kit-main\fun_project\13_snake`` directement.
    * Ou copiez ce code dans l'IDE Arduino.

.. raw:: html

   <iframe src=https://create.arduino.cc/editor/sunfounder01/df370ec5-d1b5-4ae7-b3b9-e97e0eb9a872/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


**Comment √ßa marche ?**

Voici une explication d√©taill√©e du code :

1. D√©finition et initialisation des variables

   Importez la biblioth√®que ``Arduino_LED_Matrix`` pour les op√©rations sur la matrice LED.
   matrix est une instance de la matrice LED.
   ``frame`` et ``flatFrame`` sont des tableaux utilis√©s pour stocker et traiter les informations de pixels √† l'√©cran.
   Le serpent est repr√©sent√© comme un tableau de structures ``Point``, o√π chaque point a une coordonn√©e x et y.
   food repr√©sente la position de la nourriture.
   ``direction`` est la direction de d√©placement actuelle du serpent.

2. ``setup()`` 

   Initialisez les axes X et Y du joystick comme entr√©es.
   D√©marrez la matrice LED.
   Initialisez la position de d√©part du serpent au centre de l'√©cran.
   G√©n√©rez la position initiale de la nourriture de mani√®re al√©atoire.

3. ``loop()`` 

   D√©terminez la direction du serpent en fonction des lectures du joystick.
   D√©placez le serpent.
   V√©rifiez si la t√™te du serpent entre en collision avec la nourriture. 
   Si c'est le cas, le serpent grandit et de la nouvelle nourriture est g√©n√©r√©e √† un nouvel emplacement.
   V√©rifiez si le serpent entre en collision avec lui-m√™me. Si c'est le cas, r√©initialisez le jeu.
   Dessinez l'√©tat actuel du jeu (positions du serpent et de la nourriture) sur la matrice LED.
   Ajoutez un d√©lai pour contr√¥ler la vitesse du jeu.

4. ``moveSnake()`` 

   D√©placez chaque partie du serpent √† la position de la partie pr√©c√©dente, en commen√ßant par la queue et en allant vers la t√™te.
   D√©placez la t√™te du serpent en fonction de sa direction.

5. ``generateFood()`` 

   G√©n√©rez toutes les positions possibles pour la nourriture.
   V√©rifiez si chaque position chevauche une partie du serpent. Si elle ne chevauche pas, la position est consid√©r√©e comme une position possible pour la nourriture.
   S√©lectionnez al√©atoirement une position possible pour la nourriture.

6. ``drawFrame()`` 

   Effacez le cadre actuel.
   Dessinez le serpent et la nourriture sur le cadre.
   Aplatissez le tableau √† deux dimensions frame en un tableau √† une dimension (flatFrame) et chargez-le sur la matrice LED.
