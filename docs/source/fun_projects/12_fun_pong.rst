.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _fun_pong:

JEU - Pong
=================================

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/fun_projects/12_fun_pong.mp4"  type="video/mp4">
      Votre navigateur ne supporte pas la balise vid√©o.
   </video>

Voici un jeu de Pong simple con√ßu avec un √©cran OLED et une carte Arduino.
Dans le jeu de Pong, les joueurs affrontent l'ordinateur en contr√¥lant une palette verticale pour renvoyer une balle rebondissante. 
Le but est d'emp√™cher la balle de passer le bord de votre palette, sinon l'adversaire marque un point.

Les m√©canismes du jeu se divisent en plusieurs parties :

1. Mouvement de la balle - La balle se d√©place dans sa direction actuelle √† une vitesse d√©termin√©e. √Ä chaque collision avec une palette, la vitesse de la balle augmente, rendant le jeu plus difficile.

2. Mouvement des palettes - Utilis√©es pour bloquer la balle, les palettes peuvent se d√©placer vers le haut ou vers le bas. Les joueurs contr√¥lent leur palette avec des boutons, tandis que la palette de l'ordinateur suit automatiquement la position de la balle.

3. Comptage des points - Chaque fois que la balle d√©passe le bord gauche ou droit de l'√©cran, le joueur ou l'ordinateur marque un point.

**Composants n√©cessaires**

Dans ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_oled`
        - |link_oled_buy|
    *   - :ref:`cpn_button`
        - |link_button_buy|
    *   - :ref:`cpn_power`
        - \-


**C√¢blage**

.. note::
    Pour prot√©ger la batterie de la :ref:`cpn_power`, veuillez la charger compl√®tement avant de l'utiliser pour la premi√®re fois.

.. image:: img/12_pong_bb.png
    :width: 100%
    :align: center


**Sch√©ma**

.. image:: img/12_pong_schematic.png
    :width: 100%
    :align: center

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``12_pong_oled.ino`` sous le chemin ``elite-explorer-kit-main\fun_project\12_pong_oled`` directement.
    * Ou copiez ce code dans l'IDE Arduino.

.. note::
   Pour installer la biblioth√®que, utilisez le gestionnaire de biblioth√®que Arduino et recherchez **"Adafruit SSD1306"** et **"Adafruit GFX"** et installez-les.

.. raw:: html

   <iframe src=https://create.arduino.cc/editor/sunfounder01/86dbb549-d425-4f42-8b5b-28d486e3f7f8/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

**Comment √ßa marche ?**

La structure du programme se divise en cinq parties :

1. Importation des biblioth√®ques n√©cessaires - Utilis√©es pour contr√¥ler l'√©cran OLED et lire les entr√©es des boutons.

2. D√©finition des constantes et variables globales :

   D√©finitions de la largeur et de la hauteur de l'√©cran OLED.
   D√©finitions des boutons et des broches de r√©initialisation de l'OLED.
   Position, vitesse, taille et direction de la balle et des palettes.
   Scores pour le joueur et l'ordinateur.

3. Initialisation :

   Initialiser la communication s√©rie, l'√©cran OLED et afficher l'interface initiale.
   Configurer les boutons comme entr√©es et connecter des r√©sistances pull-up.
   Dessiner le terrain de jeu.

4. Boucle principale :

   Lire l'√©tat des boutons.
   D√©placer la balle en fonction du taux de rafra√Æchissement d√©fini.
   D√©tecter les collisions entre la balle et les palettes ou les murs, ajuster la direction et la vitesse de la balle en cons√©quence.
   Mettre √† jour l'√©cran avec les scores bas√©s sur les √©v√©nements de comptage.
   Rafra√Æchir les positions des palettes.

5. Fonctions suppl√©mentaires :

   ``crossesPlayerPaddle`` et ``crossesCpuPaddle`` - Utilis√©es pour d√©tecter si la balle heurte la palette du joueur ou de l'ordinateur.
   
   ``drawCourt`` - Dessine le terrain de jeu sur l'√©cran OLED.

   ``displayScore`` - Affiche les scores du joueur et de l'ordinateur sur l'√©cran.

