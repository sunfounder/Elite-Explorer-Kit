.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _fun_hue:

HueDial
========================================

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/fun_projects/03_fun_huedial.mp4"  type="video/mp4">
      Votre navigateur ne supporte pas la balise vid√©o.
   </video>

Cet exemple contr√¥le la couleur d'une LED RVB en fonction de la position d'un bouton rotatif. Diff√©rentes positions du bouton correspondent √† diff√©rentes valeurs de TEINTE, qui sont ensuite traduites en valeurs de couleur RVB, entra√Ænant un changement de couleur pour la LED RVB.

**Composants n√©cessaires**

Dans ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_rgb_led`
        - |link_rgb_led_buy|
    *   - :ref:`potentiometer`
        - |link_potentiometer_buy|

**C√¢blage**

.. image:: img/03_hue_dial_bb.png
    :width: 70%
    :align: center

.. raw:: html

   <br/>

**Sch√©ma**

.. image:: img/03_hue_schematic.png
   :width: 80%
   :align: center

**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``03_huedial.ino`` sous le chemin ``elite-explorer-kit-main\fun_project\03_huedial`` directement.
    * Ou copiez ce code dans l'IDE Arduino.

.. raw:: html

   <iframe src=https://create.arduino.cc/editor/sunfounder01/0ad800d4-77bb-454f-8976-a078da71ec35/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

**Comment √ßa marche ?**

Voici une explication d√©taill√©e du code :

1. D√©finition des variables globales :

   ``redPin``, ``greenPin`` et ``bluePin`` : Ces variables d√©finissent les broches PWM connect√©es respectivement aux LEDs rouges, vertes et bleues.
   ``KNOB_PIN`` : D√©finit la broche d'entr√©e analogique connect√©e au bouton rotatif.

2. ``setup()`` :

   Configurez les broches pour la LED RVB en sortie.
   Par d√©faut, les broches analogiques sont configur√©es en entr√©e, il n'est donc pas n√©cessaire de d√©finir le mode d'entr√©e pour la broche du bouton.

3. ``loop()`` :

   Lisez la valeur du bouton rotatif. Cette valeur varie de 0 √† 1023.
   Normalisez la valeur du bouton √† une plage de 0 √† 1.
   Convertissez la valeur normalis√©e en une valeur de TEINTE allant de 0 √† 360.
   Convertissez la valeur de TEINTE en valeurs RVB.
   Mettez √† jour la couleur de la LED en utilisant ces valeurs RVB.

4. ``setColor()`` :

   D√©finissez les valeurs PWM appropri√©es pour chaque broche de LED en utilisant la fonction ``analogWrite()`` pour d√©finir la couleur de la LED RVB.

5. ``HUEtoRGB()`` :

   Cette fonction convertit les valeurs de TEINTE en valeurs RVB en utilisant la m√©thode de conversion HSL en RVB, mais se concentre uniquement sur le composant TEINTE, en gardant la saturation et la luminosit√© √† 100%.
   L'algorithme est divis√© en 6 √©tapes, chacune couvrant 60 degr√©s.
   Il calcule les valeurs RVB pour chaque √©tape de TEINTE, puis les √©chelonne √† une plage de 0-255, qui est la plage attendue pour la fonction ``analogWrite()``.

