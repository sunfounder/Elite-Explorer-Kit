.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _fun_escape:

JEU - √âvasion
==================================

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/fun_projects/11_fun_escape_square.mp4"  type="video/mp4">
      Votre navigateur ne supporte pas la balise vid√©o.
   </video>

Ce jeu s'appelle "√âvasion".
L'objectif du joueur est d'incliner le capteur MPU6050 pour d√©placer un pixel sur la matrice LED et tenter de le man≈ìuvrer √† travers une ouverture dans la bordure de la matrice (la sortie).

**Composants n√©cessaires**

Dans ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_gy87`
        - \-


**C√¢blage**

.. image:: img/11_escape_bb.png
    :width: 80%
    :align: center


**Sch√©ma**

.. image:: img/11_escape_schematic.png
   :width: 70%
   :align: center


**Code**

.. note::

    * Vous pouvez ouvrir le fichier ``11_escape_square.ino`` sous le chemin ``elite-explorer-kit-main\fun_project\11_escape_square`` directement.
    * Ou copiez ce code dans l'IDE Arduino.

.. note::
   Pour installer la biblioth√®que, utilisez le gestionnaire de biblioth√®que Arduino et recherchez **"Adafruit MPU6050"** et installez-la.

.. raw:: html

   <iframe src=https://create.arduino.cc/editor/sunfounder01/6b239445-f921-48fb-a93e-70cc7ef8afc7/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

**Comment √ßa marche ?**

Voici une explication d√©taill√©e du code :

1. Importation des biblioth√®ques et variables globales :

   Les biblioth√®ques import√©es incluent la matrice LED, Wire (pour la communication I2C), MPU6050 (capteur de mouvement), et ``Adafruit_Sensor``.
   Initialisation des objets MPU6050 et matrice LED.
   D√©finition des variables globales telles que pixelX et pixelY (position du pixel), gapStart et side (position de d√©part de l'ouverture et quel c√¥t√©), level (niveau de difficult√© du jeu), et plus.

2. ``setup()``:

   Initialiser la matrice LED et dessiner la matrice avec l'ouverture.
   Initialiser la communication s√©rie et v√©rifier si le capteur MPU6050 d√©marre correctement, en r√©glant sa plage d'acc√©l√©ration √† 2g.

3. ``loop()``:

   Mettre √† jour p√©riodiquement la position du pixel en fonction des lectures du capteur MPU6050.
   D√©placer p√©riodiquement la position de l'ouverture.
   Charger la nouvelle disposition du pixel et la rendre sur la matrice LED.
   V√©rifier si le pixel est pass√© par l'ouverture. 
   Si c'est le cas, attendre 1,5 seconde pour afficher le succ√®s, augmenter la difficult√© du jeu et r√©initialiser la position du pixel.

4. Autres fonctions :

   * ``drawSquareWithGap()``: Dessiner une bordure 8x8 et cr√©er une ouverture √† l'int√©rieur.
   * ``createGap()``: Cr√©er une ouverture de longueur 2 sur le c√¥t√© sp√©cifi√©.
   * ``moveGap()``: D√©placer la position de l'ouverture en fonction du c√¥t√© actuel et de gapStart, en changeant de c√¥t√© si n√©cessaire.
   * ``movePixelBasedOnMPU()``: Lire les donn√©es d'acc√©l√©ration du MPU6050. D√©placer la position du pixel en fonction des donn√©es d'acc√©l√©ration (r√©initialiser si le pixel sort des limites ou entre dans les murs).
   * ``resetPixel()``: R√©initialiser la position du pixel au centre de la matrice.
   * ``checkPixelPosition()``: V√©rifier si le pixel est sur l'ouverture. Si c'est le cas, augmenter le niveau de difficult√© du jeu et d√©finir le drapeau de passage √† vrai.

