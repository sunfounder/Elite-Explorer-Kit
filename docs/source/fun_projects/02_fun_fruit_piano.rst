.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _fun_fruit_piano:

Obstklavier
========================

.. raw:: html

   <video loop controls style = "max-width:100%">
      <source src="../_static/videos/fun_projects/02_fun_fruit_piano.mp4"  type="video/mp4">
      Ihr Browser unterst√ºtzt das Video-Tag nicht.
   </video>

Dieses Projekt ist ein einfaches Obstklavier, das Eingaben von einem MPR121-Touchsensor liest und Musik √ºber einen DAC abspielt. Mit anderen Worten, wir haben Fr√ºchte in eine Tastatur verwandelt, die es Ihnen erm√∂glicht, Musik zu spielen, indem Sie sie einfach ber√ºhren.

**Ben√∂tigte Komponenten**

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

Es ist definitiv praktisch, ein ganzes Kit zu kaufen, hier ist der Link: 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name	
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Sie k√∂nnen sie auch einzeln √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_mpr121`
        - \-
    *   - :ref:`cpn_audio_speaker`
        - \-


**Verdrahtung**

.. image:: img/02_fruit_piano_bb.png
    :width: 80%
    :align: center

.. raw:: html

   <br/>


**Schaltplan**

.. image:: img/02_fruit_piano_schematic.png
   :width: 100%

**Code**

.. note::

    * Sie k√∂nnen die Datei ``02_fruit_piano.ino`` direkt unter dem Pfad ``elite-explorer-kit-main\fun_project\02_fruit_piano`` √∂ffnen.
    * Oder kopieren Sie diesen Code in die Arduino IDE.

.. note::
   Um die Bibliothek zu installieren, verwenden Sie den Arduino-Bibliotheksmanager und suchen Sie nach **‚ÄûAdafruit MPR121‚Äú** und installieren Sie diese.

.. raw:: html

   <iframe src=https://create.arduino.cc/editor/sunfounder01/e677c06a-7af1-4846-a507-dd69c0c50aae/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


**Wie funktioniert das?**

Hier ist eine schrittweise Erkl√§rung des Codes:

1. Bibliotheks- und Objektinitialisierung:

   Importieren Sie die notwendigen Bibliotheken: ``Wire``-Bibliothek (f√ºr I2C-Kommunikation), ``Adafruit_MPR121``-Bibliothek (zur Steuerung des MPR121), ``analogWave``-Bibliothek (zur Erzeugung analoger Wellenformen) und ``pitches.h`` (definiert die Frequenzen der Noten).
   Erstellen Sie Instanzen der Objekte ``Adafruit_MPR121`` und ``analogWave``.
   Definieren Sie ein Noten-Array, um die Note zu speichern, die jedem Ber√ºhrungskanal entspricht.

2. ``setup()``:

   Initialisieren Sie die serielle Kommunikation und warten Sie, bis sie startet.
   √úberpr√ºfen und initialisieren Sie den MPR121; falls nicht gefunden, geben Sie eine Fehlermeldung auf dem seriellen Monitor aus und stoppen Sie die Ausf√ºhrung.
   Initialisieren Sie das ``analogWave``-Objekt und setzen Sie die anf√§ngliche Sinuswellenfrequenz auf 10 Hz.

3. ``loop()``:

   Lesen Sie die aktuell ber√ºhrten Kan√§le des MPR121.
   Durchlaufen Sie alle Kan√§le, √ºberpr√ºfen Sie, welcher ber√ºhrt wird, und spielen Sie die entsprechende Note.
   F√ºgen Sie eine kleine Verz√∂gerung zwischen jeder Iteration hinzu.

4. Note abspielen ``playNote()``:

   Die Funktion ``playNote`` nimmt einen ``note``-Parameter entgegen und setzt die DAC-Frequenz, um die entsprechende Note zu spielen.
   Verz√∂gern Sie f√ºr einen Zeitraum, um die Note zu spielen.
   Stoppen Sie das Abspielen der Note.
