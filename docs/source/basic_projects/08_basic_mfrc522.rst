.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez plus profond√©ment dans le monde des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux nouvelles annonces de produits et aux aper√ßus exclusifs.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et √† des promotions de vacances.

    üëâ Pr√™t √† explorer et √† cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _basic_mfrc522:

Module RFID-RC522
==========================

.. https://docs.sunfounder.com/projects/vincent-kit/en/latest/arduino/2.35_rfid-rc522_module.html

Aper√ßu
-------------

Dans cette le√ßon, vous apprendrez √† utiliser un module RFID. RFID signifie Radio Frequency Identification (Identification par radiofr√©quence). Son principe de fonctionnement implique une communication de donn√©es sans contact entre le lecteur et l'√©tiquette pour identifier la cible. Les applications de la RFID sont nombreuses, notamment les puces pour animaux, les syst√®mes antivol, le contr√¥le d'acc√®s, la gestion des parkings, l'automatisation des cha√Ænes de production, la gestion des mat√©riaux, et bien plus encore.

Composants n√©cessaires
-------------------------

Dans ce projet, nous avons besoin des composants suivants.

Il est tr√®s pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - √âL√âMENTS DANS CE KIT
        - LIEN
    *   - Kit Elite Explorer
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_mfrc522`
        - |link_mfrc522_rfid_buy|

Circuit Fritzing
---------------------

Dans cet exemple, nous ins√©rons le module RFID dans la plaque de prototypage. Connectez le 3.3V du RFID au 3.3V, GND √† GND, RST √† la broche 2, SDA √† la broche 6, SCK √† la broche 5, MOSI √† la broche 4, MISO √† la broche 3 et IRQ √† la broche 7.

.. image:: img/08-rfid_bb.png
   :align: center

Sch√©ma de connexion
-------------------------

.. image:: img/08_mfrc522_schematic.png
   :align: center
   :width: 70%

Code
-----------

.. note::

    * Vous pouvez ouvrir le fichier ``08-mfrc522.ino`` sous le chemin ``elite-explorer-kit-main\basic_project\08-mfrc522`` directement.
    * La biblioth√®que ``RFID1`` est utilis√©e ici. Vous pouvez la trouver dans le r√©pertoire ``elite-explorer-kit-main/library/``, ou cliquez ici :download:`RFID1.zip </_static/RFID1.zip>` pour la t√©l√©charger. Consultez :ref:`manual_install_lib` pour un tutoriel sur la mani√®re de l'installer.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/9a4e9be9-78f5-4bf0-8b44-ca6e44092dc1/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Une fois le code t√©l√©charg√© sur la carte Uno, approchez votre carte RFID (cl√© secr√®te) du lecteur RFID. Le module lira les informations de la carte et les imprimera ensuite sur le moniteur s√©rie.

Analyse du code
-------------------

Les fonctions du module sont incluses dans la biblioth√®que ``rfid1.h``.

.. code-block:: arduino

    #include <rfid1.h>

**Fonctions de la biblioth√®que :**

.. code-block:: arduino

    RFID1 rfid;

Cr√©er une nouvelle instance de la classe rfid1 qui repr√©sente un module
RFID particulier attach√© √† votre Arduino.

.. code-block:: arduino

    void begin(IRQ_PIN,SCK_PIN,MOSI_PIN,MISO_PIN,SDA_PIN,RST_PIN)

Configuration des broches.

* ``IRQ_PIN,SCK_PIN,MOSI_PIN,MISO_PIN`` : les broches utilis√©es pour la communication SPI.
* ``SDA_PIN`` : Adaptateur de donn√©es synchrones.
* ``RST_PIN`` : Les broches utilis√©es pour la r√©initialisation.

.. code-block:: arduino

    void init()

Initialiser le RFID.

.. code-block:: arduino

    uchar request(uchar reqMode, uchar *TagType);

Rechercher une carte et lire le type de carte, et la fonction renverra l'√©tat de lecture actuel du RFID et renverra MI_OK si elle r√©ussit.

* ``reqMode`` : M√©thodes de recherche. PICC_REQIDL est d√©fini par des bits de commande 0x26 (Rechercher les cartes qui ne sont pas en mode veille dans la zone de l'antenne).
* ``*TagType`` : Il est utilis√© pour stocker le type de carte, et sa valeur peut √™tre de 4 octets (par exemple, 0x0400).

.. code-block:: arduino

    char * readCardType(uchar *TagType)

Cette fonction d√©code le nombre hexad√©cimal √† quatre chiffres de ``*tagType``
en type de carte sp√©cifique et renvoie une cha√Æne. Si 0x0400 est pass√©,
"MFOne-S50" sera renvoy√©.

.. code-block:: arduino

    uchar anticoll(uchar *serNum);

Pr√©venir les conflits et lire le num√©ro de s√©rie de la carte. La fonction
renverra l'√©tat de lecture actuel du RFID. Elle renvoie MI_OK si elle r√©ussit.

* ``*serNum`` : Il est utilis√© pour stocker le num√©ro de s√©rie de la carte et renvoyer le num√©ro de s√©rie de 4 octets. Le 5√®me octet est un octet de v√©rification (par exemple, mon ID de carte magn√©tique est 5AE4C955).
