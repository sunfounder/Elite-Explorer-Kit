.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _basic_oled:

OLED
==========================

.. https://docs.sunfounder.com/projects/ultimate-sensor-kit/en/latest/components_basic/22-component_oled.html

√úberblick
---------------

In dieser Lektion erfahren Sie mehr √ºber OLED-Displays, die den SSD1306-Treiber verwenden. OLED-Displays (Organische Leuchtdioden) werden in verschiedenen elektronischen Ger√§ten wie Smartwatches, Mobiltelefonen und sogar Fernsehern verwendet. Der SSD1306 ist ein Ein-Chip-CMOS-OLED/PLED-Treiber mit Controller f√ºr organische/polymerbasierte Leuchtdioden-Dot-Matrix-Grafikdisplaysysteme. Er bietet eine klare und deutliche visuelle Ausgabe durch organische, lichtemittierende Dioden, die bei Durchgang eines elektrischen Stroms leuchten.

Im bereitgestellten Code wird ein OLED-Display √ºber das I2C-Protokoll mit einem Arduino-Board verbunden. Der Code verwendet die Adafruit SSD1306-Bibliothek zur Steuerung des Displays. Das Programm umfasst verschiedene Funktionalit√§ten wie:

1. Textanzeige: ‚ÄûHello world!‚Äú wird auf dem Bildschirm angezeigt.
2. Invertierter Text: Der Text ‚ÄûHello world!‚Äú wird in einem invertierten Farbschema dargestellt.
3. Schriftgr√∂√üe: Der Text ‚ÄûHello!‚Äú wird mit einer vergr√∂√üerten Schriftgr√∂√üe angezeigt.
4. Numerische Anzeige: Die Zahlen 123456789 werden angezeigt.
5. ASCII-Zeichen: Eine Reihe von ASCII-Zeichen wird angezeigt.
6. Scrollen: Text wird horizontal √ºber das Display gescrollt.
7. Bitmap-Anzeige: Ein vordefiniertes Bitmap-Bild wird auf dem OLED-Bildschirm angezeigt.

Dieses OLED-Display kann in einer Vielzahl von Anwendungen eingesetzt werden, einschlie√ülich digitaler Uhren, Mini-Spielkonsolen, Informationsanzeigen und so weiter. Es bietet eine gro√üartige M√∂glichkeit, eine Benutzeroberfl√§che in kompakten und tragbaren Ger√§ten bereitzustellen.

Ben√∂tigte Komponenten
-------------------------

F√ºr dieses Projekt ben√∂tigen wir die folgenden Komponenten.

Es ist definitiv praktisch, ein komplettes Kit zu kaufen, hier ist der Link:

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Name
        - ARTIKEL IN DIESEM KIT
        - LINK
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Sie k√∂nnen die Komponenten auch separat √ºber die untenstehenden Links kaufen.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - KOMPONENTENBESCHREIBUNG
        - KAUF-LINK

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_oled`
        - |link_oled_buy|

Verdrahtung
----------------------

.. image:: img/15-oled_bb.png
    :align: center

Schaltplan
-----------------------

.. image:: img/15_oled_schematic.png
    :align: center
    :width: 70%

Code
---------------

.. note::

    * Sie k√∂nnen die Datei ``15-oled.ino`` direkt unter dem Pfad ``elite-explorer-kit-main\basic_project\15-oled`` √∂ffnen.
    * Oder kopieren Sie diesen Code in die Arduino IDE.

    .. note:: 
      Um die Bibliothek zu installieren, verwenden Sie den Arduino Library Manager und suchen Sie nach **‚ÄûAdafruit SSD1306‚Äú** und **‚ÄûAdafruit GFX‚Äú** und installieren Sie diese. 

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/ec580f40-78b4-42c2-af7c-bb5bc05a7c23/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/basic_projects/15_basic_oled.mp4"  type="video/mp4">
      Ihr Browser unterst√ºtzt das Video-Tag nicht.
   </video>

   <br/><br/>

Code-Analyse
------------------------

1. **Einbindung der Bibliotheken und Anfangsdefinitionen**:
   Die notwendigen Bibliotheken f√ºr die Anbindung an das OLED werden eingebunden. Anschlie√üend werden Definitionen bez√ºglich der Abmessungen und der I2C-Adresse des OLEDs bereitgestellt.

   - **Adafruit SSD1306**: Diese Bibliothek wurde entwickelt, um die Anbindung des SSD1306 OLED-Displays zu unterst√ºtzen. Sie bietet Methoden zur Initialisierung des Displays, Steuerung seiner Einstellungen und Anzeige von Inhalten.
   - **Adafruit GFX-Bibliothek**: Dies ist eine Kerngrafikbibliothek zum Anzeigen von Text, Erzeugen von Farben, Zeichnen von Formen usw. auf verschiedenen Bildschirmen, einschlie√ülich OLEDs.

   .. note:: 
      Um die Bibliothek zu installieren, verwenden Sie den Arduino Library Manager und suchen Sie nach **‚ÄûAdafruit SSD1306‚Äú** und **‚ÄûAdafruit GFX‚Äú** und installieren Sie diese. 

   .. code-block:: arduino
    
      #include <SPI.h>
      #include <Wire.h>
      #include <Adafruit_GFX.h>
      #include <Adafruit_SSD1306.h>

      #define SCREEN_WIDTH 128  // OLED display width, in pixels
      #define SCREEN_HEIGHT 64  // OLED display height, in pixels

      #define OLED_RESET -1
      #define SCREEN_ADDRESS 0x3C

2. **Bitmap-Daten**:
   Bitmap-Daten zur Anzeige eines benutzerdefinierten Symbols auf dem OLED-Bildschirm. Diese Daten repr√§sentieren ein Bild in einem Format, das das OLED interpretieren kann.

   Sie k√∂nnen dieses Online-Tool namens |link_image2cpp| verwenden, um Ihr Bild in ein Array umzuwandeln. 

   Das Schl√ºsselwort ``PROGMEM`` zeigt an, dass das Array im Programmspeicher des Arduino-Mikrocontrollers gespeichert ist. Die Speicherung von Daten im Programmspeicher (PROGMEM) anstelle des RAMs kann hilfreich sein, wenn es sich um gro√üe Datenmengen handelt, die sonst zu viel Platz im RAM einnehmen w√ºrden.

   .. code-block:: arduino

      static const unsigned char PROGMEM sunfounderIcon[] = {...};

3. **Setup-Funktion (Initialisierung und Anzeige)**:
   Die ``setup()``-Funktion initialisiert das OLED und zeigt eine Reihe von Mustern, Texten und Animationen an.

   .. code-block:: arduino

      void setup() {
         ...  // Serial initialization and OLED object initialization
         ...  // Displaying various text, numbers, and animations
      }