.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et tirages au sort** : Participez √† des tirages au sort et des promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _basic_oled:

OLED
==========================

.. https://docs.sunfounder.com/projects/ultimate-sensor-kit/en/latest/components_basic/22-component_oled.html

Vue d'ensemble
--------------------

Dans cette le√ßon, vous allez d√©couvrir les √©crans OLED utilisant le pilote SSD1306. Les √©crans OLED (Organic Light-Emitting Diodes) sont largement utilis√©s dans divers appareils √©lectroniques tels que les montres connect√©es, les t√©l√©phones mobiles et m√™me les t√©l√©viseurs. Le SSD1306 est un pilote CMOS OLED/PLED √† puce unique avec contr√¥leur pour un syst√®me d'affichage graphique √† matrice de points √† diodes √©lectroluminescentes organiques/polym√®res. Il offre une sortie visuelle nette et claire gr√¢ce aux diodes √† base de mat√©riaux organiques qui √©mettent de la lumi√®re lorsqu'un courant √©lectrique les traverse.

Dans le code fourni, un √©cran OLED est interfac√© avec une carte Arduino via le protocole I2C. Le code utilise la biblioth√®que Adafruit SSD1306 pour contr√¥ler l'affichage. Le programme couvre diverses fonctionnalit√©s telles que :

1. Affichage de texte : "Hello world!" est affich√© √† l'√©cran.
2. Texte invers√© : Le texte "Hello world!" est affich√© dans un sch√©ma de couleurs invers√©.
3. Taille de police : Le texte "Hello!" est affich√© avec une taille de police augment√©e.
4. Affichage num√©rique : Les chiffres 123456789 sont affich√©s.
5. Caract√®res ASCII : Un ensemble de caract√®res ASCII est affich√©.
6. D√©filement : Le texte d√©file horizontalement sur l'√©cran.
7. Affichage de bitmap : Une image bitmap pr√©d√©finie est affich√©e sur l'√©cran OLED.

Cet √©cran OLED peut √™tre utilis√© dans une multitude d'applications, y compris les horloges num√©riques, les mini consoles de jeux, les affichages d'informations, etc. Il offre un excellent moyen de fournir une interface utilisateur dans des appareils compacts et portables.


Composants requis
-------------------------

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_oled`
        - |link_oled_buy|

C√¢blage
----------------------

.. image:: img/15-oled_bb.png
    :align: center

Sch√©ma de c√¢blage
-----------------------

.. image:: img/15_oled_schematic.png
    :align: center
    :width: 70%

Code
---------------

.. note::

    * Vous pouvez ouvrir le fichier ``15-oled.ino`` sous le chemin ``elite-explorer-kit-main\basic_project\15-oled`` directement.
    * Ou copiez ce code dans Arduino IDE.

    .. note:: 
      Pour installer la biblioth√®que, utilisez le gestionnaire de biblioth√®ques Arduino et recherchez **"Adafruit SSD1306"** et **"Adafruit GFX"** et installez-les. 

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/ec580f40-78b4-42c2-af7c-bb5bc05a7c23/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/basic_projects/15_basic_oled.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

   <br/><br/>

Analyse du code
------------------------

1. **Inclusion des biblioth√®ques et d√©finitions initiales** :
   Les biblioth√®ques n√©cessaires pour l'interfa√ßage avec l'OLED sont incluses. Ensuite, des d√©finitions concernant les dimensions de l'OLED et l'adresse I2C sont fournies.

   - **Adafruit SSD1306** : Cette biblioth√®que est con√ßue pour faciliter l'interfa√ßage avec l'affichage OLED SSD1306. Elle fournit des m√©thodes pour initialiser l'affichage, contr√¥ler ses param√®tres et afficher du contenu.
   - **Adafruit GFX Library** : Il s'agit d'une biblioth√®que graphique de base pour afficher du texte, produire des couleurs, dessiner des formes, etc., sur divers √©crans, y compris les OLED.

   .. note:: 
      Pour installer la biblioth√®que, utilisez le gestionnaire de biblioth√®ques Arduino et recherchez **"Adafruit SSD1306"** et **"Adafruit GFX"** et installez-les. 

   .. code-block:: arduino
    
      #include <SPI.h>
      #include <Wire.h>
      #include <Adafruit_GFX.h>
      #include <Adafruit_SSD1306.h>

      #define SCREEN_WIDTH 128  // Largeur de l'√©cran OLED en pixels
      #define SCREEN_HEIGHT 64  // Hauteur de l'√©cran OLED en pixels

      #define OLED_RESET -1
      #define SCREEN_ADDRESS 0x3C

2. **Donn√©es bitmap** :
   Les donn√©es bitmap pour afficher une ic√¥ne personnalis√©e sur l'√©cran OLED. Ces donn√©es repr√©sentent une image dans un format que l'OLED peut interpr√©ter.

   Vous pouvez utiliser cet outil en ligne appel√© |link_image2cpp| qui peut transformer votre image en un tableau.

   Le mot-cl√© ``PROGMEM`` indique que le tableau est stock√© dans la m√©moire programme du microcontr√¥leur Arduino. Stocker les donn√©es dans la m√©moire programme (PROGMEM) au lieu de la RAM peut √™tre utile pour de grandes quantit√©s de donn√©es, qui prendraient autrement trop de place dans la RAM.

   .. code-block:: arduino

      static const unsigned char PROGMEM sunfounderIcon[] = {...};

3. **Fonction Setup (initialisation et affichage)** :
   La fonction ``setup()`` initialise l'OLED et affiche une s√©rie de motifs, de textes et d'animations.

   .. code-block:: arduino

      void setup() {
         ...  // Initialisation de la communication s√©rie et de l'objet OLED
         ...  // Affichage de divers textes, chiffres et animations
      }