.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et tirages au sort** : Participez √† des tirages au sort et des promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _basic_gy87_qmc5883l:

QMC5883L
==========================

Vue d'ensemble
---------------

Dans ce tutoriel, nous allons explorer le module IMU GY-87, en nous concentrant sur son magn√©tom√®tre QMC5883L. La premi√®re partie du tutoriel vous guide √† travers la calibration du magn√©tom√®tre QMC5883L, essentielle pour des mesures pr√©cises du champ magn√©tique. Vous apprendrez √† t√©l√©verser un sketch de calibration sur Arduino, √† effectuer une calibration en temps r√©el et √† appliquer ces param√®tres dans vos projets. La deuxi√®me partie du tutoriel couvre l'initialisation du MPU6050 (acc√©l√©rom√®tre et gyroscope) et du QMC5883L sur un Arduino Uno en utilisant les biblioth√®ques Adafruit MPU6050 et QMC5883LCompass. Vous apprendrez √† lire et afficher les donn√©es des capteurs sur le moniteur s√©rie, une comp√©tence fondamentale pour les applications de navigation, de suivi de mouvement et de d√©tection d'orientation.

Composants requis
-------------------------

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_gy87`
        - \-

C√¢blage
----------------------

.. image:: img/09-gy87_bb.png
    :align: center
    :width: 90%

.. raw:: html

   <br/>


Sch√©ma de c√¢blage
-----------------------------

.. image:: img/09_basic_gy87_schematic.png
    :align: center
    :width: 60%


Installer la biblioth√®que
-------------------------------

.. note:: 
    Pour installer la biblioth√®que, utilisez le gestionnaire de biblioth√®ques Arduino. 
    
        - Recherchez **"Adafruit MPU6050"** et installez

          Lors de l'installation de chaque biblioth√®que, veuillez vous assurer de s√©lectionner l'installation de toutes les d√©pendances.
      
          .. image:: img/09-add_lib_tip.png
             :width: 80%

        - Recherchez **"QMC5883LCompass"** et installez


.. _basic_gy87_calibrate:

Calibrer le QMC5883L
-------------------------

.. note::

    * Vous pouvez ouvrir le fichier ``09-gy87_compass_calibration.ino`` sous le chemin ``elite-explorer-kit-main\basic_project\09-gy87_compass_calibration`` directement.
    * Ou copiez ce code dans l'IDE Arduino.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/252c7a58-3a9f-4c66-959e-f45fc19e68aa/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Apr√®s avoir t√©l√©vers√© le code, ouvrez le moniteur s√©rie. Suivez les instructions dans le moniteur s√©rie pour calibrer le QMC5883L. Lorsqu'il vous est demand√© de d√©placer le capteur, il est recommand√© d'utiliser la m√©thode de calibration en huit. Alternativement, gardez simplement le capteur parall√®le au sol et tournez-le dans le sens horaire ou antihoraire jusqu'√† ce que le moniteur s√©rie indique que la calibration est termin√©e.

.. image:: img/09_calibrate_qmc5883l.png
    :width: 100%
    :align: center

Une fois que toutes les donn√©es de calibration ont √©t√© collect√©es, le sketch vous fournira un code qui ressemblera √† ``compass.setCalibrationOffsets(-375.00, -179.00, 85.00);`` et ``compass.setCalibrationScales(1.04, 0.96, 1.01);``. Copiez ce code. Vous voudrez peut-√™tre le sauvegarder pour r√©f√©rence future.

Utilisation du QMC5883L : Ouvrez le sketch de votre projet et collez la ligne de code que vous avez copi√©e juste en dessous de l'appel ``compass.init()``. Comme ceci :

.. code:: arduino 

   void initializeQMC5883L() {
   
     compass.init();
   
     // Vous devriez remplacer le code ci-dessous selon vos r√©sultats de calibration
     compass.setCalibrationOffsets(-375.00, -179.00, 85.00);
     compass.setCalibrationScales(1.04, 0.96, 1.01);
   
   }

Code
---------------------------------------------

.. note::

   Les magn√©tom√®tres doivent √™tre calibr√©s (:ref:`basic_gy87_calibrate`) avant de pouvoir √™tre utilis√©s comme compas, et doivent √™tre tenus √† niveau lors de l'utilisation et **√©loign√©s des objets en fer, des mat√©riaux magn√©tis√©s et des fils porteurs de courant**.

.. note::

    * Vous pouvez ouvrir le fichier ``09-gy87_qmc5883l.ino`` sous le chemin ``elite-explorer-kit-main\basic_project\09-gy87_qmc5883l`` directement.
    * Ou copiez ce code dans l'IDE Arduino.
    * Placez le code obtenu √† partir des √©tapes de calibration sous la ligne de code ``compass.init()`` dans la fonction ``initializeQMC5883L()``.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/8b266a18-ce7b-4330-8c10-c9f4148bb8ec/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


Analyse du code
------------------------

#. Inclusion des biblioth√®ques et initialisation des capteurs
   Cette section inclut les biblioth√®ques n√©cessaires pour les capteurs MPU6050 et QMC5883L et initialise leurs objets.

   .. code-block:: arduino
      
      #include <Adafruit_MPU6050.h>
      #include <Adafruit_Sensor.h>
      #include <Wire.h>
      #include <QMC5883LCompass.h>

      Adafruit_MPU6050 mpu;
      QMC5883LCompass compass;

#. Fonction de configuration

   Initialise la communication s√©rie, le capteur MPU6050, et configure le MPU6050 en mode bypass I2C pour permettre l'acc√®s direct au magn√©tom√®tre QMC5883L. Ensuite, il initialise le magn√©tom√®tre QMC5883L.

   .. code-block:: arduino
      
      void setup() {
        // Initialise la communication s√©rie avec un d√©bit de 9600 bauds
        Serial.begin(9600);
      
        // Initialise le capteur MPU6050 (acc√©l√©rom√®tre et gyroscope)
        initializeMPU6050();
      
        // Active le bypass I2C sur le MPU6050 pour acc√©der directement au magn√©tom√®tre QMC5883L
        mpu.setI2CBypass(true);
      
        // Initialise le magn√©tom√®tre QMC5883L
        initializeQMC5883L();
      }

#. Fonction boucle

   Lit continuellement les donn√©es du magn√©tom√®tre QMC5883L et les affiche sur le moniteur s√©rie.

   .. code-block:: arduino
      
      void loop() {
        printQMC5883L();
        delay(500);
      }

#. Fonction d'initialisation du QMC5883L

   Initialise et calibre le magn√©tom√®tre QMC5883L. Les valeurs de calibration doivent √™tre ajust√©es en fonction des donn√©es de calibration sp√©cifiques. (:ref:`basic_gy87_calibrate`)

   .. code-block:: arduino
      
      void initializeQMC5883L() {
        compass.init();
      
        // Vous devriez remplacer le code ci-dessous selon vos r√©sultats de calibration
        compass.setCalibrationOffsets(-549.00, -66.00, 160.00);
        compass.setCalibrationScales(0.97, 1.02, 1.02);
      }

#. Fonction d'impression des donn√©es du QMC5883L

   Cette fonction lit les valeurs X, Y, Z et l'azimut du magn√©tom√®tre, puis les affiche sur le moniteur s√©rie.

   .. code-block:: arduino

    void printQMC5883L() {
    
      Serial.println();
      Serial.println("QMC5883L ------------");
    
    	int x, y, z, a;
    	char myArray[3];
    	
    	compass.read();
      
    	x = compass.getX();
    	y = compass.getY();
    	z = compass.getZ();
    	
    	a = compass.getAzimuth();
    
    	compass.getDirection(myArray, a);
      
    	Serial.print("X: ");
    	Serial.print(x);
    
    	Serial.print(" Y: ");
    	Serial.print(y);
    
    	Serial.print(" Z: ");
    	Serial.print(z);
    
    	Serial.print(" Azimuth: ");
    	Serial.print(a);
    
    	Serial.print(" Direction: ");
    	Serial.print(myArray[0]);
    	Serial.print(myArray[1]);
    	Serial.println(myArray[2]);
    
      Serial.println("QMC5883L ------------");
      Serial.println();
    }
