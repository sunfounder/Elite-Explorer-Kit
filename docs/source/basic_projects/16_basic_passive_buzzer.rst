.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et tirages au sort** : Participez √† des tirages au sort et des promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _basic_passive_buzzer:

Buzzer Passif
==========================

.. https://docs.sunfounder.com/projects/3in1-kit-r4/en/latest/basic_project/ar_tone_notone.html#ar-passive-buzzer


Vue d'ensemble
------------------

Dans ce projet, utilisez ces deux fonctions pour faire vibrer le buzzer passif et produire du son. La fonction ``tone()`` g√©n√®re une onde carr√©e avec une fr√©quence sp√©cifi√©e (et un cycle de service de 50 %) sur une broche. Une dur√©e peut √™tre sp√©cifi√©e, ou l'onde continue jusqu'√† ce que ``noTone()`` soit appel√©e.
Tout comme le buzzer actif, le buzzer passif utilise √©galement l'induction √©lectromagn√©tique pour fonctionner.
La diff√©rence est qu'un buzzer passif n'a pas sa propre source d'oscillation, il ne produira donc pas de son si des signaux CC sont utilis√©s. Cependant, cela permet au buzzer passif d'ajuster sa propre fr√©quence d'oscillation et de produire diff√©rentes notes telles que "do, r√©, mi, fa, sol, la, si".

Composants requis
-------------------------

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_transistor`
        - |link_transistor_buy|
    *   - :ref:`cpn_buzzer`
        - |link_passive_buzzer_buy|

C√¢blage
----------------------

.. note::
    Lors de la connexion du buzzer, assurez-vous de v√©rifier ses broches. La broche la plus longue est l'anode et la plus courte est la cathode. Il est important de ne pas les m√©langer, car cela emp√™cherait le buzzer de produire du son.

.. image:: img/16-passive_buzzer_bb.png
    :align: center
    :width: 70%

Sch√©ma de c√¢blage
-----------------------

.. image:: img/16_passive_buzzer_schematic.png
    :align: center
    :width: 80%

Code
---------------

.. note::

    * Vous pouvez ouvrir le fichier ``16-passive_buzzer.ino`` sous le chemin ``elite-explorer-kit-main\basic_project\16-passive_buzzer`` directement.
    * Ou copiez ce code dans Arduino IDE.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/7936cad2-3605-40a0-a9fc-573f934ab6b1/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>
    
Lorsque vous avez termin√© de t√©l√©verser le code sur la carte R4, vous pouvez entendre une m√©lodie contenant sept notes.

Analyse du code
------------------------

1. Inclusion de la biblioth√®que pitches:
   Cette biblioth√®que fournit les valeurs de fr√©quence pour diverses notes de musique, vous permettant d'utiliser la notation musicale dans votre code.

   .. note::
      Veuillez placer le fichier ``pitches.h`` dans le m√™me r√©pertoire que le code pour assurer son bon fonctionnement. |link_pitches|

      .. image:: img/16_passive_buzzer_piches.png

   .. code-block:: arduino
       
      #include "pitches.h"

2. D√©finition des constantes et des tableaux :

   * ``buzzerPin`` est la broche num√©rique sur l'Arduino o√π le buzzer est connect√©.

   * ``melody[]`` est un tableau qui stocke la s√©quence des notes √† jouer.

   * ``noteDurations[]`` est un tableau qui stocke la dur√©e de chaque note de la m√©lodie.

   .. code-block:: arduino
   
      const int buzzerPin = 8;
      int melody[] = {
        NOTE_C4, NOTE_G3, NOTE_G3, NOTE_A3, NOTE_G3, 0, NOTE_B3, NOTE_C4
      };
      int noteDurations[] = {
        4, 8, 8, 4, 4, 4, 4, 4
      };

3. Jouer la m√©lodie :

   * La boucle ``for`` it√®re sur chaque note de la m√©lodie.

   * La fonction ``tone()`` joue une note sur le buzzer pour une dur√©e sp√©cifique.

   * Un d√©lai est ajout√© entre les notes pour les distinguer.

   * La fonction ``noTone()`` arr√™te le son.

   .. code-block:: arduino
   
      void setup() {
        for (int thisNote = 0; thisNote < 8; thisNote++) {
          int noteDuration = 1000 / noteDurations[thisNote];
          tone(buzzerPin, melody[thisNote], noteDuration);
          int pauseBetweenNotes = noteDuration * 1.30;
          delay(pauseBetweenNotes);
          noTone(buzzerPin);
        }
      }

4. Fonction loop vide :
   Comme la m√©lodie est jou√©e une seule fois dans le setup, il n'y a pas de code dans la fonction loop.

5. N'h√©sitez pas √† exp√©rimenter en modifiant les notes et les dur√©es dans les tableaux ``melody[]`` et ``noteDurations[]`` pour cr√©er vos propres m√©lodies. Si cela vous int√©resse, il existe un d√©p√¥t GitHub (|link_arduino-songs|) qui propose du code Arduino pour jouer diverses chansons. Bien que leur approche puisse diff√©rer de ce projet, vous pouvez consulter leurs notes et dur√©es √† titre de r√©f√©rence.
