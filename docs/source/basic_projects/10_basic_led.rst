.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et tirages au sort** : Participez √† des tirages au sort et des promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _basic_led:

Module LED
==========================

Tout comme l'impression de "Hello, world !" est la premi√®re √©tape pour apprendre √† programmer, utiliser un programme pour piloter une LED est l'introduction traditionnelle √† la programmation physique.

Composants requis
-------------------------

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_resistor`
        - |link_resistor_buy|
    *   - :ref:`cpn_led`
        - |link_led_buy|

C√¢blage
----------------------

.. image:: img/10-led_bb.png
    :align: center
    :width: 60%


Sch√©ma de c√¢blage
-----------------------

.. image:: img/10_led_schematic.png
    :align: center
    :width: 80%


Code
---------------

.. note::

   * Vous pouvez ouvrir le fichier ``10-led.ino`` sous le chemin ``elite-explorer-kit-main\basic_project\10-led``. 
   * Ou copiez ce code dans **Arduino IDE**.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/2d23289e-ebd1-49e9-b11f-b1bbc1f192c1/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/basic_projects/10_basic_led.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

Une fois le code t√©l√©vers√© avec succ√®s, vous verrez la LED connect√©e √† la broche num√©rique 9 de la carte Arduino commencer √† clignoter. La LED s'allumera pendant une demi-seconde puis s'√©teindra pendant une autre demi-seconde, r√©p√©tant ce cycle continuellement tant que le programme est en cours d'ex√©cution.

Analyse du code
------------------------

Ici, nous connectons la LED √† la broche num√©rique 9, donc nous devons d√©clarer une variable ``int`` appel√©e ``ledPin`` au d√©but du programme et lui attribuer une valeur de 9.

.. code-block:: arduino

    const int ledPin = 9;


Maintenant, initialisez la broche dans la fonction ``setup()``, o√π vous devez initialiser la broche en mode ``OUTPUT``.

.. code-block:: arduino

    void setup() {
        pinMode(ledPin, OUTPUT);
    }

Dans la fonction ``loop()``, ``digitalWrite()`` est utilis√© pour fournir un signal de niveau haut de 5V √† la broche ledPin, ce qui entra√Ænera une diff√©rence de tension entre les broches de la LED et l'allumera.

.. code-block:: arduino

    digitalWrite(ledPin, HIGH);

Si le signal de niveau est chang√© en LOW, le signal de la broche ledPin sera ramen√© √† 0 V pour √©teindre la LED.

.. code-block:: arduino

    digitalWrite(ledPin, LOW);


Un intervalle entre l'allumage et l'extinction est n√©cessaire pour permettre aux 
gens de voir le changement, nous utilisons donc un code ``delay(1000)`` pour que le contr√¥leur ne fasse rien pendant 1000 ms.

.. code-block:: arduino

    delay(1000);   
