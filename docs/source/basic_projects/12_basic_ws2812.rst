.. note::

    Bonjour, bienvenue dans la communaut√© SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasts sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques gr√¢ce √† l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre & Partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et tirages au sort** : Participez √† des tirages au sort et des promotions de vacances.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _basic_ws2812:

Bande de LED RVB WS2812
=============================

Vue d'ensemble
---------------------

Dans cette le√ßon, vous allez d√©couvrir les LED NeoPixel et comment les contr√¥ler √† l'aide de la biblioth√®que FastLED sur un Arduino Uno R4. Les LED NeoPixel sont largement utilis√©es dans diverses applications telles que la d√©coration int√©rieure, les v√™tements et l'√©clairage √©v√©nementiel. La biblioth√®que FastLED simplifie le processus de programmation de ces LED. Ici, une cha√Æne de 8 LED NeoPixel est connect√©e √† un Arduino, et chaque LED de la s√©quence s'allume en bleu momentan√©ment avant de s'√©teindre, passant √† la LED suivante de la cha√Æne. Cet exemple de base peut servir de fondation pour des motifs lumineux plus complexes ou des projets d'√©clairage interactifs.

Composants requis
---------------------------

Pour ce projet, nous avons besoin des composants suivants. 

Il est certainement pratique d'acheter un kit complet, voici le lien : 

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DES COMPOSANTS
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_ws2812`
        - |link_ws2812_buy|

C√¢blage
----------------------

.. image:: img/12-ws2812_bb.png
    :align: center

Sch√©ma de c√¢blage
-----------------------

.. image:: img/12_ws2812_schematic.png
    :align: center
    :width: 80%

Code
---------------

.. note::

    * Vous pouvez ouvrir le fichier ``12-ws2812.ino`` sous le chemin ``elite-explorer-kit-main\basic_project\12-ws2812`` directement.
    * Ou copiez ce code dans Arduino IDE.

.. note:: 
    Pour installer la biblioth√®que, utilisez le gestionnaire de biblioth√®ques Arduino et recherchez **"FastLED"** et installez-la. 

.. important::
    Avec la sortie de la version |link_fastled_3_7_0|, la biblioth√®que FastLED prend d√©sormais officiellement en charge l'Arduino UNO R4. Vous n'avez donc plus besoin d'installer manuellement la version de d√©veloppement. Mettez simplement √† jour ou installez la biblioth√®que FastLED en utilisant le gestionnaire de biblioth√®ques Arduino.

.. warning::
    **[Obsol√®te]** Comme la biblioth√®que |link_FastLED_lib| n'a pas encore publi√© officiellement une version supportant l'Arduino R4, vous devrez t√©l√©charger :download:`la derni√®re version de d√©veloppement de la biblioth√®que FastLED <https://codeload.github.com/FastLED/FastLED/zip/refs/heads/master>` et remplacer les fichiers existants de la biblioth√®que FastLED. Pour des instructions d√©taill√©es sur la fa√ßon de faire cela, veuillez vous r√©f√©rer √† la section :ref:`manual_install_lib`. (Cette note sera retir√©e lorsque la biblioth√®que FastLED publiera officiellement une mise √† jour prenant en charge l'Arduino UNO R4.)




.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/6c9b8c2c-6cea-4ea8-a959-e579ca98f35d/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/basic_projects/12_basic_ws2812.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

Une fois le code t√©l√©vers√© avec succ√®s, vous verrez chaque LED de la cha√Æne de 8 LED NeoPixel s'allumer une par une en bleu. Le programme bouclera cette s√©quence continuellement, √©teignant chaque LED avant de passer √† la suivante. Avec un court d√©lai entre chaque LED, l'effet lumineux appara√Ætra comme un point bleu se d√©pla√ßant le long de la cha√Æne.

Analyse du code
------------------------

1. Importer la biblioth√®que et d√©finir les constantes

   - Importation de la biblioth√®que ``FastLED`` pour utiliser ses fonctions.
   - D√©finition du nombre de LEDs et de la broche de donn√©es √† laquelle elles sont connect√©es.
   
   .. code-block:: arduino
   
      #include <FastLED.h>  // Inclure la biblioth√®que FastLED
      #define NUM_LEDS 8    // Nombre de LEDs dans la cha√Æne
      #define DATA_PIN 6    // Broche de donn√©es pour le contr√¥le des LEDs

2. Initialiser le tableau de LEDs
   
   Cr√©ation d'un tableau de type ``CRGB`` pour stocker les informations de couleur de chaque LED.

   .. code-block:: arduino

      CRGB leds[NUM_LEDS];  // Tableau pour stocker les donn√©es de couleur des LEDs

3. Initialiser les LEDs dans la fonction Setup

   Utilisation de ``FastLED.addLeds`` pour initialiser les LEDs.

   .. code-block:: arduino

      void setup() {
        FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);  // Initialiser les LEDs
      }

4. Contr√¥ler les LEDs dans la boucle Loop
   
   Boucler √† travers chaque LED pour la d√©finir en bleu, l'afficher, la r√©initialiser, puis attendre un court d√©lai.

   - Le tableau ``leds`` sert de tampon de couleur pour votre bande LED. Chaque √©l√©ment de ce tableau correspond √† une LED individuelle sur votre bande physique, et sa valeur de couleur d√©termine la couleur que la LED affichera. L'ordre des √©l√©ments dans le tableau correspond √† l'ordre des LEDs sur la bande, en commen√ßant par la premi√®re LED (qui correspond √† ``leds[0]``) jusqu'√† la derni√®re LED. Pour changer la couleur d'une LED sp√©cifique sur votre bande, il suffit de modifier l'√©l√©ment correspondant dans le tableau ``leds``. Vous pouvez utiliser |fastled_color| ou d√©finir les couleurs en utilisant les valeurs RVB (en prenant le vert comme exemple, utilisez ``leds[dot] = CRGB::Green`` ou ``leds[dot] = CRGB(0, 255, 0);``).

   - La fonction ``FastLED.show();`` met √† jour la bande LED avec les nouvelles donn√©es de couleur, rendant les changements visibles. C'est comme appuyer sur le bouton "publier" pour votre bande LED apr√®s avoir fait des modifications et des ajustements dans le code.

   .. raw:: html

     <br/>

   .. code-block:: arduino

      void loop() {
        for (int dot = 0; dot < NUM_LEDS; dot++) {
          leds[dot] = CRGB::Blue;   // D√©finir la LED actuelle en bleu
          FastLED.show();           // Mettre √† jour les LEDs
          leds[dot] = CRGB::Black;  // R√©initialiser la LED actuelle
          delay(30);                // Attendre un court instant avant de passer √† la LED suivante
        }
      }