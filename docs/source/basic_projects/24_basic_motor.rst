.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-go√ªts.
    - **R√©ductions sp√©ciales** : Profitez de r√©ductions exclusives sur nos nouveaux produits.
    - **Promotions festives et cadeaux** : Participez √† des cadeaux et des promotions sp√©ciales pendant les f√™tes.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _basic_motor:

Moteur
==========================

Aper√ßu
--------

Dans cette le√ßon, vous apprendrez √† utiliser un moteur, dont le principe de fonctionnement repose sur le fait qu'une bobine sous tension est forc√©e de tourner dans un champ magn√©tique, entra√Ænant ainsi la rotation du rotor du moteur. L'engrenage pignon entra√Æne alors le volant moteur √† tourner.

Composants n√©cessaires
-----------------------------

Pour ce projet, nous avons besoin des composants suivants. 

Il est tr√®s pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment via les liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DU COMPOSANT
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_breadboard`
        - |link_breadboard_buy|
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_ta6586`
        - \-
    *   - :ref:`cpn_motor`
        - |link_motor_buy|
    *   - :ref:`cpn_power`
        - \-

C√¢blage
----------------------

Dans cet exemple, nous utilisons un module d'alimentation pour alimenter l'anode et la cathode de la breadboard.

.. note::
    Pour prot√©ger la batterie du :ref:`cpn_power`, veuillez la charger compl√®tement avant de l'utiliser pour la premi√®re fois.

.. image:: img/24-motor_bb.png
    :align: center
    :width: 80%

.. raw:: html
  
  <br/> 

Sch√©ma de c√¢blage
-------------------------

.. image:: img/24_motor_schematic.png
    :align: center
    :width: 100%

.. raw:: html
  
  <br/> 

Code
----

.. note::

    * Vous pouvez ouvrir le fichier ``24-motor.ino`` sous le chemin ``elite-explorer-kit-main\basic_project\24-motor`` directement.
    * Ou copier ce code dans l'IDE Arduino.

.. raw:: html

    <iframe src=https://create.arduino.cc/editor/sunfounder01/7376df09-204d-4698-b2a6-106e2d2f00e6/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Apr√®s avoir t√©l√©vers√© le code sur la carte UNO, vous pouvez choisir la direction de rotation du moteur en tapant "A" ou "B" dans le moniteur s√©rie.


Analyse du code
--------------------------

Le moteur peut √™tre entra√Æn√© en fournissant une diff√©rence de tension entre les plaques de cuivre des deux c√¥t√©s du moteur. 
Ainsi, il suffit d'√©crire 0 pour la tension d'un c√¥t√© de la plaque de cuivre et 5V pour l'autre c√¥t√©. Modifiez la valeur du signal analogique √©crit pour ajuster la direction et la vitesse.

.. code-block:: arduino

   // Fonction pour faire tourner le moteur dans le sens horaire
   void clockwise(int Speed) {
     analogWrite(motorBI, 0);
     analogWrite(motorFI, Speed);
   }
   
   // Fonction pour faire tourner le moteur dans le sens antihoraire
   void anticlockwise(int Speed) {
     analogWrite(motorBI, Speed);
     analogWrite(motorFI, 0);
   }

Dans cet exemple, Serial.Read() est utilis√© pour contr√¥ler la direction du moteur. 

Lorsque vous tapez "A" dans le moniteur s√©rie, la fonction clockwise(255) est appel√©e pour faire tourner le moteur √† une vitesse de 255. 
Entrez "B", et le moteur tournera dans le sens inverse.

.. code-block:: arduino

   void loop() {
     // V√©rifiez s'il y a des donn√©es disponibles sur le port s√©rie
     if (Serial.available() > 0) {
       int incomingByte = Serial.read(); // Lire les donn√©es entrantes
       
       // D√©terminez la direction du moteur en fonction de l'entr√©e utilisateur
       switch (incomingByte) {
         case 'A':
           clockwise(255); // Faire tourner le moteur dans le sens horaire
           Serial.println("Le moteur tourne dans le sens horaire.");
           break;
         case 'B':
           anticlockwise(255); // Faire tourner le moteur dans le sens antihoraire
           Serial.println("Le moteur tourne dans le sens antihoraire.");
           break;
       }
     }
     
     delay(3000); // Attendre 3 secondes
     stopMotor(); // Arr√™ter le moteur
   }

