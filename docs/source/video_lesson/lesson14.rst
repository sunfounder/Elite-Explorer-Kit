.. note::

    こんにちは、SunFounder Raspberry Pi & Arduino & ESP32愛好者コミュニティへようこそ！Facebookで仲間と一緒にRaspberry Pi、Arduino、ESP32をさらに深く探求しましょう。

    **参加する理由**

    - **専門家のサポート**: コミュニティやチームの助けを借りて、購入後の問題や技術的な課題を解決できます。
    - **学びと共有**: スキルを向上させるためのヒントやチュートリアルを交換できます。
    - **独占プレビュー**: 新製品の発表やプレビューに早期アクセスできます。
    - **特別割引**: 最新製品に対する特別割引を享受できます。
    - **プロモーションと景品**: 景品やプロモーションに参加できます。

    👉 探索と創造の準備はできましたか？[|link_sf_facebook|]をクリックして、今日から参加しましょう！

LESSON 14: シリアルモニタからのユーザー入力の読み取り
=======================================================

このレッスンでは、Arduinoを使用してユーザーインタラクティブなプログラムを作成し、シリアルモニタを通じてユーザー入力を取得し、その入力に基づいて異なる操作を実行する方法を説明します。以下は学ぶ内容の簡単な概要です：

1. **シリアルモニタを介したユーザー入力の導入** : Arduinoシリアルモニタからのユーザー入力の読み取りの概念を紹介します。これはインタラクティブなプロジェクトにとって不可欠です。
2. **シリアル通信の設定**: シリアルモニタを初期化するために、コード内でSerial.begin(9600)を使用してシリアル通信を設定するための詳細な手順を説明します。
3. **異なるデータ型の読み取り**: ユーザーからさまざまなデータ型を読み取る方法を段階的に説明します：整数：Serial.parseInt()を使用して整数値を読み取る。浮動小数点数：Serial.parseFloat()を使用して浮動小数点数を読み取る。文字列：Serial.readString()を使用して文字列を読み取る。
4. **ユーザー入力を待機するためのWhileループの実装**: Whileループを実装してユーザー入力を待機し、ユーザーが必要なデータを入力するまでプログラムが進行しないようにする方法を説明します。
5. **シリアル入力のエラーハンドリング**: 不正なデータ型に関連するエラーの処理方法と、追加の文字が入力として読み取られないようにシリアルモニタを「No line ending」に設定することの重要性についてのヒントを提供します。
6. **実践的な応用とサンプルコード**: ユーザーに数字、浮動小数点数、および文字列を入力させるプロジェクトの例を示し、これらの入力を効果的にキャプチャして使用する方法を説明します。提供されるコードは、入力を求め、それを待機し、次に入力を読み取って処理する方法を示しています。
7. **宿題の課題**: LEDの明るさレベル（0から255の間）をユーザーに尋ね、その入力に基づいてLEDの明るさを設定するプログラムを作成すること。 


**ビデオ**

.. raw:: html

    <iframe width="700" height="500" src="https://www.youtube.com/embed/GpsP5zySI_A?si=o9Q1tTC1X1B9teef" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

