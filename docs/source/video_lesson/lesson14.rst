.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

LE√áON 14 : Lire les entr√©es utilisateur depuis le moniteur s√©rie
===========================================================================

Cette le√ßon d√©montre comment cr√©er un programme interactif utilisant l'Arduino, en se concentrant sur l'obtention des entr√©es utilisateur via le moniteur s√©rie et en effectuant diff√©rentes op√©rations en fonction de l'entr√©e. Voici un bref aper√ßu de ce que vous allez apprendre :

1. **Introduction √† la saisie utilisateur via le moniteur s√©rie** : Une introduction au concept de lecture des entr√©es utilisateur depuis le moniteur s√©rie de l'Arduino, essentiel pour les projets interactifs.
2. **Configuration de la communication s√©rie** : Instructions d√©taill√©es sur la configuration de la communication s√©rie dans le code Arduino, en utilisant Serial.begin(9600) pour initialiser le moniteur s√©rie.
3. **Lecture de diff√©rents types de donn√©es** : Guide √©tape par √©tape sur la fa√ßon de lire divers types de donn√©es de l'utilisateur :
   - Entiers : Utilisation de Serial.parseInt() pour lire des valeurs enti√®res.
   - Flottants : Utilisation de Serial.parseFloat() pour lire des nombres √† virgule flottante.
   - Cha√Ænes : Utilisation de Serial.readString() pour lire des cha√Ænes de caract√®res.
4. **Impl√©mentation d'une boucle While pour attendre les entr√©es utilisateur** : Explication de la fa√ßon d'impl√©menter une boucle while pour attendre les entr√©es utilisateur, en s'assurant que le programme ne se poursuit pas tant que l'utilisateur n'a pas saisi les donn√©es requises.
5. **Gestion des erreurs avec les entr√©es s√©rie** : Conseils sur la gestion des erreurs li√©es aux types de donn√©es incorrects et sur la configuration du moniteur s√©rie en "Pas de fin de ligne" pour √©viter que des caract√®res suppl√©mentaires ne soient lus comme entr√©e.
6. **Application pratique et exemple de code** : Un projet exemple o√π l'utilisateur est invit√© √† entrer un nombre, un flottant et une cha√Æne de caract√®res, d√©montrant comment capturer et utiliser ces entr√©es efficacement. Le code fourni montre comment demander une entr√©e, attendre celle-ci, puis lire et traiter l'entr√©e.
7. **Devoirs** : Cr√©er un programme qui demande √† l'utilisateur un niveau de luminosit√© (entre 0 et 255) pour une LED et ajuste ensuite la luminosit√© de la LED en cons√©quence.

**Vid√©o**

.. raw:: html

       <iframe width="700" height="500" src="https://www.youtube.com/embed/GpsP5zySI_A?si=o9Q1tTC1X1B9teef" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
