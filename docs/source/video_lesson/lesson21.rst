.. note::

    Hola, ¬°bienvenido a la Comunidad de Entusiastas de SunFounder para Raspberry Pi, Arduino y ESP32 en Facebook! Sum√©rgete en el mundo de Raspberry Pi, Arduino y ESP32 junto a otros entusiastas.

    **¬øPor qu√© unirse?**

    - **Soporte experto**: Resuelve problemas postventa y desaf√≠os t√©cnicos con la ayuda de nuestra comunidad y equipo.
    - **Aprende y comparte**: Intercambia consejos y tutoriales para mejorar tus habilidades.
    - **Avances exclusivos**: Obt√©n acceso anticipado a anuncios de nuevos productos y adelantos exclusivos.
    - **Descuentos especiales**: Disfruta de descuentos exclusivos en nuestros productos m√°s recientes.
    - **Promociones y sorteos festivos**: Participa en sorteos y promociones festivas.

    üëâ ¬øListo para explorar y crear con nosotros? Haz clic en [|link_sf_facebook|] y √∫nete hoy mismo.

LECCI√ìN 21: Comprendiendo los Bucles While
================================================

Esta lecci√≥n muestra c√≥mo usar bucles while en Arduino para crear un sistema de parpadeo de LED RGB controlado por el usuario basado en la entrada a trav√©s del monitor serial. Aqu√≠ tienes un breve resumen de lo que aprender√°s:

1. **Revisi√≥n de la Tarea Anterior**: Recapitulaci√≥n de la tarea de la Lecci√≥n 20, que consist√≠a en hacer parpadear un LED RGB en una secuencia rojo-verde-azul un n√∫mero de veces especificado por el usuario usando un bucle while en lugar de un bucle for.
2. **Configuraci√≥n del Circuito**: Instrucciones detalladas sobre c√≥mo conectar correctamente un LED RGB y sus resistencias limitadoras de corriente al Arduino. Cada canal de color (rojo, verde, azul) se conecta a un pin digital PWM (pines 9, 10 y 11), y el c√°todo com√∫n (pata larga) se conecta a tierra.
3. **Escritura del C√≥digo**: Instrucciones paso a paso para:Definir los pines para cada canal de color del LED RGB.Configurar el monitor serial para la entrada del usuario.Usar comandos de escritura digital para controlar el estado de encendido/apagado de cada canal de color.Implementar un bucle while para controlar el n√∫mero de ciclos de parpadeo basado en la entrada del usuario.Asegurarse de que el programa se detenga despu√©s del n√∫mero especificado de parpadeos.
4. **Consejos de Depuraci√≥n**: Orientaci√≥n sobre c√≥mo solucionar problemas comunes tales como:Corregir errores de sintaxis en el c√≥digo.Asegurarse de que el programa se repita el n√∫mero correcto de veces.Manejar correctamente la entrada del usuario y detener el programa despu√©s de los ciclos especificados.Inicializar e incrementar correctamente los contadores de bucle.
5. **Aplicaciones Pr√°cticas**: Ejemplos de uso de bucles while para repetir una secuencia de acciones un n√∫mero especificado de veces. La lecci√≥n enfatiza la importancia de obtener la entrada del usuario para controlar el comportamiento del programa y asegurar que el contador del bucle se gestione correctamente.
6. **Pruebas y Depuraci√≥n**: √ânfasis en probar el c√≥digo a fondo bajo diversas condiciones para garantizar la fiabilidad.
7. **Tarea**: Repetir la secuencia de parpadeos un n√∫mero especificado de veces por el usuario sin usar un bucle for. Asegurarse de que el programa se detenga despu√©s del n√∫mero especificado de parpadeos.

**Video**

.. raw:: html

    <iframe width="700" height="500" src="https://www.youtube.com/embed/Cw_i7l_RFVE?si=o9Q1tTC1X1B9teef" title="Reproductor de video de YouTube" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

