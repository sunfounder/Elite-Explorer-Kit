.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _new_led_matrix:

Matrice LED 12x8
========================================

L'Arduino UNO R4 WiFi est √©quip√© d'une matrice LED 12x8 int√©gr√©e, programmable pour afficher une vari√©t√© de graphiques, animations, servir d'interface ou m√™me faciliter les exp√©riences de jeu.

.. image:: img/unor4wifi.webp
    :width: 60%

Dans ce guide, nous vous proposons un exemple simple pour vous aider √† afficher le motif de votre choix sur la matrice LED.

Comment stocker les donn√©es de la matrice LED dans Arduino
-------------------------------------------------------------------

Pour utiliser la matrice LED, vous aurez besoin de la biblioth√®que ``Arduino_LED_Matrix``, install√©e avec le c≈ìur Renesas.

La biblioth√®que LED Matrix pour l'UNO R4 WiFi fonctionne en cr√©ant et en chargeant des cadres dans un tampon pour les afficher. Un cadre, √©galement appel√© "image", repr√©sente ce qui est actuellement affich√© sur la matrice. Dans une animation compos√©e de plusieurs images, chaque image est consid√©r√©e comme un cadre.

Pour contr√¥ler la matrice LED 12x8 sur l'UNO R4 WiFi, un minimum de 96 bits d'espace m√©moire est requis. La biblioth√®que propose deux approches pour cela.

**Une approche utilise un tableau √† deux dimensions**, avec des z√©ros et des uns pour indiquer si la LED correspondante est √©teinte ou allum√©e. Chaque num√©ro correspond √† une LED sur la matrice LED. Le tableau suivant illustre un motif en forme de c≈ìur.

.. code-block:: arduino
   
   // Utiliser un tableau √† deux dimensions pour repr√©senter une matrice LED 12x8.
   byte frame[8][12] = {
     { 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0 },
     { 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
     { 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
     { 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
     { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0 },
     { 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
     { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
     { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
   };

**Une autre approche utilise un tableau d'entiers 32 bits** pour maintenir l'√©tat de la matrice LED. Cette m√©thode est plus compacte mais l√©g√®rement plus complexe. Chaque ``unsigned long`` stocke 32 bits. Ainsi, pour une matrice LED 12x8, qui contient 96 LED, vous aurez besoin d'au moins trois variables ``unsigned long``.

1. Chaque ``unsigned long`` contient 32 bits, et vous pouvez consid√©rer ces bits comme l'√©tat d'une certaine partie de la matrice LED.
2. Ces variables ``unsigned long`` forment un tableau qui encapsule l'√©tat complet de la matrice LED.

Voici un extrait de code utilisant trois variables `unsigned long` pour repr√©senter une matrice LED 12x8.

.. code-block:: arduino

   // Utiliser un tableau d'entiers 32 bits pour stocker la matrice LED.
   unsigned long frame[] = {
     0x3184a444, // √âtat des 32 premi√®res LED
     0x42081100, // √âtat des 32 LED suivantes
     0xa0040000  // √âtat des 32 derni√®res LED
   };

Pour mieux visualiser l'√©tat des LED, ces valeurs peuvent √™tre converties en forme binaire, o√π chaque bit repr√©sente s√©quentiellement l'√©tat de chaque LED de gauche √† droite et de haut en bas. Un 0 indique √©teint, et un 1 indique allum√©.

.. code-block:: arduino

   0x3184a444 -> 110001100001001010010001000100
   0x42081100 -> 1000010000010000001000100000000
   0xa0040000 -> 10100000000001000000000000000000

Afficher le motif sur la matrice LED
-----------------------------------------

Une fois votre motif pr√™t, l'√©tape suivante consiste √† transmettre ces donn√©es √† la matrice LED 12x8. Cela implique g√©n√©ralement d'invoquer les fonctions de la biblioth√®que et de passer le tableau ou les variables contenant les √©tats des LED √† ces fonctions.

1. Utiliser un tableau √† deux dimensions

   Pour afficher le motif stock√© dans un tableau 2D, vous pouvez utiliser le code suivant :
   
   .. code-block:: arduino
   
      #include <Arduino_LED_Matrix.h>
   
      ArduinoLEDMatrix matrix;
   
      // Tableau 2D pr√©d√©fini
      byte frame[8][12] = {
           { 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0 },
           { 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0 },
           { 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0 },
           { 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
           { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0 },
           { 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
           { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
           { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
      };
   
      void setup() {
        // Initialiser la matrice LED
        matrix.begin();
      }
   
      void loop() {
        // Afficher le motif sur la matrice LED
        matrix.renderBitmap(frame, 8, 12);
        delay(1000);
      }
   
   Dans ce code, nous utilisons la fonction ``matrix.renderBitmap(frame, 8, 12);`` pour afficher la matrice LED. Ici, 8 et 12 repr√©sentent respectivement les lignes et les colonnes de la matrice LED.

2. Utiliser un tableau d'entiers 32 bits
   
   Pour afficher le motif stock√© dans un tableau de ``unsigned long``, utilisez le code suivant :
   
   .. code-block:: arduino
   
      #include "Arduino_LED_Matrix.h"
      
      ArduinoLEDMatrix matrix;
      
      void setup() {
        matrix.begin();
      }
      
      const uint32_t heart[] = {
          0x3184a444,
          0x44042081,
          0x100a0040
      };
        
      void loop(){
        matrix.loadFrame(heart);
        delay(500);
      }
   
   Dans ce cas, nous devons utiliser la fonction ``matrix.loadFrame(heart)`` pour afficher le motif sur la matrice LED.


√âditeur de matrice LED Arduino
-----------------------------------------

Je recommande d'utiliser un tableau ``unsigned long`` pour stocker l'√©tat de la matrice LED, car cela permet d'√©conomiser de la m√©moire sur l'Arduino. Bien que cette m√©thode puisse ne pas √™tre tr√®s intuitive, vous pouvez utiliser l'|link_led_matrix_editor| comme aide, qui vous aide √† g√©n√©rer un tableau ``unsigned long``. 

Avec l'|link_led_matrix_editor| et la biblioth√®que ``Arduino_LED_Matrix``, vous pouvez cr√©er facilement des ic√¥nes ou des animations et les afficher sur la carte UNO R4 WiFi. Tout ce que vous avez √† faire est de dessiner, de t√©l√©charger le fichier ``.h`` et d'appeler la fonction ``matrix.play()`` dans votre sketch pour r√©aliser facilement votre prochain projet.



#. Ouvrez l'√©diteur de matrice LED

   .. image:: img/04_led_matrix_editor_1.png
     :width: 80%

#. Dessinez votre motif sur la toile centrale

   .. image:: img/04_led_matrix_editor_2.png
     :width: 80%

#. D√©finissez l'intervalle des cadres en millisecondes

   .. image:: img/04_led_matrix_editor_3.png
     :width: 80%

#. Vous pouvez cr√©er un nouveau cadre vierge ou copier et cr√©er un nouveau cadre √† partir du cadre actuel.

   .. image:: img/04_led_matrix_editor_4.png
     :width: 80%

#. Exportez le fichier d'en-t√™te ``.h``

   .. image:: img/04_led_matrix_editor_5.png
     :width: 80%

   .. image:: img/04_led_matrix_editor_6.png

   Apr√®s avoir cliqu√© sur OK, vous recevrez un fichier nomm√© ``animation.h``.


Afficher des animations
-----------------------------------------

Dans les √©tapes pr√©c√©dentes, nous avons obtenu un fichier ``.h`` qui stocke une s√©rie de cadres ainsi que leurs dur√©es. Ensuite, affichons-les sur la matrice LED.

#. Tout d'abord, cr√©ez un sketch. Vous pouvez soit ouvrir le fichier ``04-led_matrix.ino`` situ√© sous le chemin ``elite-explorer-kit-main\r4_new_feature\04-led_matrix``, soit copier ce code dans l'IDE Arduino.

   .. raw:: html

      <iframe src=https://create.arduino.cc/editor/sunfounder01/f3712371-7c3d-4a4b-bd98-f74fe43269ed/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


#. Si vous utilisez le code du chemin ``elite-explorer-kit-main\r4_new_feature\04-led_matrix``, vous trouverez un onglet nomm√© ``animation.h`` dans l'IDE Arduino. Ouvrez-le et remplacez le code existant par le fichier .h que vous avez obtenu sur le site.

   .. image:: img/04_animation_h_file.png
     :width: 80%

#. Si vous avez cr√©√© votre propre sketch, vous devez copier le fichier ``.h`` obtenu sur la page web dans le m√™me r√©pertoire que le sketch.

#. Apr√®s avoir configur√© votre code pr√©f√©r√© dans l'IDE Arduino et l'avoir t√©l√©charg√© sur votre Arduino UNO R4 WiFi, votre matrice LED devrait maintenant afficher le motif que vous avez d√©fini.

   .. raw:: html
   
      <video loop autoplay muted style = "max-width:100%">
         <source src="../_static/videos/new_feature_projects/led_matrix.mp4"  type="video/mp4">
         Votre navigateur ne supporte pas la balise vid√©o.
      </video>

   F√©licitations ! Vous avez programm√© avec succ√®s la matrice LED 12x8 de votre Arduino UNO R4 WiFi !


**R√©f√©rence**

- |link_r4_led|

**Plus de projets**

* :ref:`fun_snake` (Projet amusant)
