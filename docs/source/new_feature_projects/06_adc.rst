.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _new_adc:

Analog-Digital-Wandler (ADC) (bis zu 14 Bit)
=============================================

In zeitgen√∂ssischen Elektronikprojekten ist das genaue Lesen und Verarbeiten analoger Signale unerl√§sslich. Analog-Digital-Wandler (ADCs) wandeln analoge Signale in digitale um, sodass Mikrocontroller sie verarbeiten k√∂nnen. Der Arduino Uno R4 hat in diesem Bereich dank seines leistungsf√§higeren Prozessors erhebliche Fortschritte gemacht. W√§hrend die vorherige Generation, der Arduino Uno R3, eine maximale Aufl√∂sung von 10 Bit hatte, betr√§gt die ADC-Aufl√∂sung des Arduino Uno R4 nun 14 Bit. Diese Verbesserung erm√∂glicht pr√§zisere Werte aus analogen Signalen, was die Verfeinerung und Genauigkeit der Datenerfassung und -verarbeitung erh√∂ht.

ADC-Aufl√∂sung einstellen
-------------------------

Die Standardaufl√∂sung auf der Arduino-Platine ist auf 10 Bit (0-1023) eingestellt. Der UNO R4 WiFi unterst√ºtzt bis zu 14 Bit (0-16383) Aufl√∂sung und liefert somit pr√§zisere Werte aus analogen Signalen. Um die Aufl√∂sung zu aktualisieren, m√ºssen Sie nur den Befehl ``analogReadResolution()`` verwenden.

.. code-block:: arduino

   void setup() {
     // Serielle Verbindung √∂ffnen
     Serial.begin(9600);
   }
   
   void loop() {
     // Eingang an A0 mit der Standardaufl√∂sung (10 Bit) lesen
     // und √ºber die serielle Verbindung ausgeben
     analogReadResolution(10);
     Serial.print("ADC 10-Bit (Standard) : ");
     Serial.print(analogRead(A0));
   
     // Aufl√∂sung auf 12 Bit √§ndern und A0 lesen
     analogReadResolution(12);
     Serial.print(", 12-Bit : ");
     Serial.print(analogRead(A0));
   
     // Aufl√∂sung auf 14 Bit √§ndern und A0 lesen
     analogReadResolution(14);
     Serial.print(", 14-Bit : ");
     Serial.print(analogRead(A0));
   
     // Aufl√∂sung auf 8 Bit √§ndern und A0 lesen
     analogReadResolution(8);
     Serial.print(", 8-Bit : ");
     Serial.println(analogRead(A0));
   
     // Eine kleine Verz√∂gerung, um den Serial Monitor nicht zu √ºberlasten
     delay(100);
   }

Hinweise und Warnungen
-----------------------

Beim Einstellen der ADC-Aufl√∂sung sind folgende Punkte zu beachten:

1. **Grenzen der Hardware-F√§higkeiten**: Wenn Sie den Wert von ``analogReadResolution()`` h√∂her einstellen als die F√§higkeiten der Platine, meldet der Arduino nur die h√∂chstm√∂gliche Aufl√∂sung und f√ºllt die zus√§tzlichen Bits mit Nullen auf. Beispielsweise ergibt die Verwendung des Uno R4 mit ``analogReadResolution(16)`` eine angen√§herte 16-Bit-Zahl, bei der die ersten 14 Bits den tats√§chlichen ADC-Wert enthalten und die letzten 2 Bits mit Nullen aufgef√ºllt sind.

2. **Niedrigere Aufl√∂sungseinstellungen**: Wenn Sie den Wert von ``analogReadResolution()`` niedriger einstellen als die F√§higkeiten der Platine, werden die zus√§tzlichen niederwertigen Bits des ADC verworfen. Dies erm√∂glicht Ihnen die Arbeit mit einem vereinfachten Bereich, falls Ihre Anwendung keine volle Aufl√∂sung erfordert.

Das Verst√§ndnis dieser √úberlegungen wird Ihnen helfen, die ADC-F√§higkeiten des Arduino Uno R4 effektiv zu nutzen und eine optimale Leistung und Genauigkeit f√ºr Ihre spezifische Anwendung sicherzustellen.


**Referenz**

- |link_analogReadResolution|
- |link_r4_minima_adc|
- |link_r4_wifi_adc|
