.. note::

    Bonjour et bienvenue dans la communaut√© SunFounder des passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

.. _new_adc:

Convertisseur analogique-num√©rique (ADC) (jusqu'√† 14 bits)
=================================================================

Dans les projets √©lectroniques modernes, il est essentiel de lire et de traiter avec pr√©cision les signaux analogiques. Les convertisseurs analogique-num√©rique (ADC) transforment les signaux analogiques en signaux num√©riques pour √™tre trait√©s par le microcontr√¥leur. L'Arduino Uno R4 a connu des avanc√©es significatives dans ce domaine, gr√¢ce √† son processeur plus puissant. Alors que la g√©n√©ration pr√©c√©dente, l'Arduino Uno R3, avait une r√©solution maximale de 10 bits, la r√©solution ADC de l'Arduino Uno R4 est d√©sormais de 14 bits. Cette am√©lioration permet d'obtenir des valeurs plus pr√©cises √† partir des signaux analogiques, am√©liorant ainsi la finesse et la pr√©cision de la collecte et du traitement des donn√©es.

D√©finir la r√©solution de l'ADC
------------------------------------

La r√©solution standard sur la carte Arduino est fix√©e √† 10 bits (0-1023). L'UNO R4 WiFi prend en charge une r√©solution allant jusqu'√† 14 bits (0-16383), fournissant des valeurs plus pr√©cises √† partir des signaux analogiques. Pour mettre √† jour la r√©solution, il suffit d'utiliser la commande ``analogReadResolution()``.

.. code-block:: arduino

   void setup() {
     // ouvrir une connexion s√©rie
     Serial.begin(9600);
   }
   
   void loop() {
     // lire l'entr√©e sur A0 √† la r√©solution par d√©faut (10 bits)
     // et l'envoyer sur la connexion s√©rie
     analogReadResolution(10);
     Serial.print("ADC 10-bit (default) : ");
     Serial.print(analogRead(A0));
   
     // changer la r√©solution √† 12 bits et lire A0
     analogReadResolution(12);
     Serial.print(", 12-bit : ");
     Serial.print(analogRead(A0));
   
     // changer la r√©solution √† 14 bits et lire A0
     analogReadResolution(14);
     Serial.print(", 16-bit : ");
     Serial.print(analogRead(A0));
   
     // changer la r√©solution √† 8 bits et lire A0
     analogReadResolution(8);
     Serial.print(", 8-bit : ");
     Serial.println(analogRead(A0));
   
     // un petit d√©lai pour ne pas saturer le moniteur s√©rie
     delay(100);
   }


Remarques et avertissements
-----------------------------------

Lors de la d√©finition de la r√©solution de l'ADC, prenez en compte les points suivants :

1. **Limites des capacit√©s mat√©rielles** : Si vous d√©finissez la valeur ``analogReadResolution()`` √† un niveau sup√©rieur aux capacit√©s de la carte, l'Arduino ne rapportera que sa r√©solution maximale, en remplissant les bits suppl√©mentaires avec des z√©ros. Par exemple, utiliser l'Uno R4 avec ``analogReadResolution(16)`` donnera un nombre approximatif de 16 bits, avec les 14 premiers bits contenant la lecture r√©elle de l'ADC et les 2 derniers bits remplis de z√©ros.

2. **R√©glages de r√©solution inf√©rieure** : Si vous d√©finissez la valeur ``analogReadResolution()`` √† un niveau inf√©rieur aux capacit√©s de la carte, les bits de poids faible suppl√©mentaires lus √† partir de l'ADC seront supprim√©s. Cela vous permet de travailler avec une plage simplifi√©e si votre application ne n√©cessite pas une r√©solution compl√®te.

Comprendre ces consid√©rations vous aidera √† utiliser efficacement les capacit√©s de l'ADC de l'Arduino Uno R4, garantissant des performances optimales et une pr√©cision pour votre application sp√©cifique.


**R√©f√©rence**
- |link_analogReadResolution|
- |link_r4_minima_adc|
- |link_r4_wifi_adc|







