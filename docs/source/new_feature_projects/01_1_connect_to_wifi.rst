.. note::

    Bonjour et bienvenue dans la communaut√© SunFounder des passionn√©s de Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur des Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

Connectez-vous au Wi-Fi
==========================

Ce tutoriel vous guidera √† travers les √©tapes essentielles pour connecter votre carte Arduino √† un r√©seau Wi-Fi. Vous apprendrez √† initialiser le module Wi-Fi, √† v√©rifier son firmware et √† rejoindre en toute s√©curit√© un r√©seau en utilisant son SSID et son mot de passe. Une fois connect√©, vous d√©couvrirez comment surveiller des d√©tails importants du r√©seau, tels que les adresses IP et MAC de votre appareil, ainsi que la force du signal du r√©seau, directement depuis la console s√©rie. Ce tutoriel sert √† la fois de guide pratique pour la connectivit√© Wi-Fi et d'introduction √† la surveillance du r√©seau avec Arduino, vous aidant √† √©tablir et √† maintenir une connexion Wi-Fi fiable.

1. T√©l√©chargez le code
========================

Ouvrez le fichier ``01-wifi_connect.ino`` sous le chemin ``elite-explorer-kit-main\r4_new_feature\01-wifi_connect``, ou copiez ce code dans **Arduino IDE**.

.. note:: 
      Le support Wi-Fi¬Æ est activ√© via la biblioth√®que int√©gr√©e ``WiFiS3`` qui est fournie avec l'Arduino UNO R4 Core. L'installation du core installe automatiquement la biblioth√®que ``WiFiS3``.

Vous devez encore cr√©er ou modifier ``arduino_secrets.h``, remplacez ``SECRET_SSID`` et ``SECRET_PASS`` par le nom et le mot de passe du Wi-Fi auquel vous souhaitez vous connecter. Le fichier doit contenir :

.. code:: arduino

    //arduino_secrets.h header file
    #define SECRET_SSID "yournetwork"
    #define SECRET_PASS "yourpassword"

.. raw:: html
       
   <iframe src=https://create.arduino.cc/editor/sunfounder01/a41ac638-31da-464c-b5d3-e70f2aacd29c/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Ouvrez le moniteur s√©rie, et vous verrez un contenu similaire √† celui ci-dessous. Arduino affichera les adresses IP et MAC de votre appareil, ainsi que la force du signal du r√©seau.

.. image:: img/01_1_wifi.png
    :width: 100%

2. Explication du code
========================

1. Inclusion des biblioth√®ques et des donn√©es secr√®tes

   .. code-block:: arduino

      #include <WiFiS3.h>
      #include "arduino_secrets.h" 

   - ``WiFiS3`` est une biblioth√®que qui fournit des fonctions pour la connectivit√© Wi-Fi. L'installation du core R4 installe automatiquement la biblioth√®que WiFiS3.
   - ``arduino_secrets.h`` est un fichier s√©par√© o√π vous gardez votre SSID et votre mot de passe pour qu'ils ne soient pas expos√©s dans votre code principal. Stocker le r√©seau et le mot de passe s√©par√©ment r√©duit le risque de partager accidentellement les identifiants Wi-Fi.

   .. raw:: html

      <br/>

2. D√©claration des variables globales

   .. code-block:: arduino

      char ssid[] = SECRET_SSID;
      char pass[] = SECRET_PASS;
      int status = WL_IDLE_STATUS;

   - ``ssid`` et ``pass`` contiennent le nom et le mot de passe de votre r√©seau.
   - ``status`` stockera l'√©tat actuel de votre connexion Wi-Fi.

   .. raw:: html

      <br/>

3. Fonction ``setup()``

   L'interface s√©rie est initialis√©e avec un d√©bit en bauds de 9600. La ligne ``while (!Serial);`` s'assure que le programme attend jusqu'√† ce que la connexion s√©rie soit √©tablie.

   .. code-block:: arduino

      void setup() {
          //Initialisez la s√©rie et attendez que le port s'ouvre :
          Serial.begin(9600);
          while (!Serial) {
            ; // attendez que le port s√©rie se connecte. N√©cessaire uniquement pour le port USB natif
          }
          ...
      }

   Ensuite, le code v√©rifie si le module Wi-Fi est disponible ou non. Sinon, le programme s'arr√™te, interrompant ainsi toute ex√©cution ult√©rieure.

   .. code-block:: arduino

     ...
     // v√©rifiez la pr√©sence du module Wi-Fi :
     if (WiFi.status() == WL_NO_MODULE) {
         Serial.println("√âchec de la communication avec le module Wi-Fi !");
         // ne continuez pas
         while (true);
     }
     ...

   Dans cette partie du code, nous v√©rifions si la version du firmware de l'Uno R4 Wi-Fi est √† jour. Si ce n'est pas la version la plus r√©cente, une invite de mise √† niveau sera affich√©e. Vous pouvez vous r√©f√©rer √† :ref:`update_firmware` pour la mise √† niveau du firmware.

   .. https://forum.arduino.cc/t/radio-module-firmware-version-0-2-0-is-now-available/1147361

   .. code-block:: arduino

      ...
      String fv = WiFi.firmwareVersion();
      if (fv < WIFI_FIRMWARE_LATEST_VERSION) {
          Serial.println("Please upgrade the firmware");
      }
      ...

4. Fonction ``loop()``

   .. code-block:: arduino

      void loop() {
        // v√©rifiez la connexion au r√©seau toutes les 10 secondes :
        delay(10000);
        printCurrentNet();
      }

   - Toutes les 10 secondes, la fonction ``printCurrentNet()`` est appel√©e pour afficher les d√©tails du r√©seau actuel.

**R√©f√©rence**

- |link_r4_wifi|
