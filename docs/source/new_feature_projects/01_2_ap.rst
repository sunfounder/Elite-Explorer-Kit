.. note::

    Bonjour et bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez au c≈ìur de Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

LED Contr√¥l√©e par Wi-Fi (Point d'Acc√®s)
---------------------------------------------------

Ce projet vous permet de contr√¥ler une LED via une interface web. La carte Arduino agit comme un point d'acc√®s Wi-Fi, cr√©ant son propre r√©seau local auquel vous pouvez vous connecter avec un navigateur web. Une fois connect√©, vous pouvez naviguer vers l'adresse IP de l'appareil en utilisant le navigateur web, o√π vous trouverez des options pour allumer et √©teindre une LED (connect√©e √† la broche 13 de la carte). Le projet fournit un retour en temps r√©el sur l'√©tat de la LED via le moniteur s√©rie, ce qui facilite le d√©bogage et la compr√©hension du flux des op√©rations.

1. T√©l√©chargez le code
============================

Ouvrez le fichier ``01-wifi_ap.ino`` sous le chemin ``elite-explorer-kit-main\r4_new_feature\01-wifi_ap``, ou copiez ce code dans **Arduino IDE**.

.. note:: 
      Le support Wi-Fi¬Æ est activ√© via la biblioth√®que int√©gr√©e ``WiFiS3`` qui est fournie avec l'Arduino UNO R4 Core. L'installation du core installe automatiquement la biblioth√®que ``WiFiS3``.

Vous devez encore cr√©er ou modifier ``arduino_secrets.h``, remplacez ``SECRET_SSID`` et ``SECRET_PASS`` par le nom et le mot de passe de votre point d'acc√®s Wi-Fi. Le fichier doit contenir :

.. code:: arduino

    //fichier d'en-t√™te arduino_secrets.h
    #define SECRET_SSID "votrereseau"
    #define SECRET_PASS "votremotdepasse"

.. raw:: html
    
   <iframe src=https://create.arduino.cc/editor/sunfounder01/8d0d28d2-2394-4eaa-b276-86a4f061badb/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/new_feature_projects/wifi.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

2. Explication du code
========================

#. Importation des biblioth√®ques n√©cessaires

   Importation de la biblioth√®que ``WiFiS3`` pour les fonctionnalit√©s Wi-Fi et de ``arduino_secrets.h`` pour les donn√©es sensibles comme les mots de passe.
  
   .. code-block:: arduino
   
     #include "WiFiS3.h"
     #include "arduino_secrets.h"

#. Configuration et initialisation des variables

   D√©finir le SSID Wi-Fi, le mot de passe et l'index de cl√© ainsi que la broche LED et l'√©tat Wi-Fi.
  
   .. code-block:: arduino
   
     char ssid[] = SECRET_SSID;        
     char pass[] = SECRET_PASS;        
     int keyIndex = 0;
     int led =  LED_BUILTIN;
     int status = WL_IDLE_STATUS;
     WiFiServer server(80);

#. Fonction ``setup()``

   Initialiser la communication s√©rie et configurer le module Wi-Fi.
   
   .. code-block:: arduino
   
     void setup() {

       // ... code d'installation ...
       // Cr√©er un point d'acc√®s
       status = WiFi.beginAP(ssid, pass);
       // ... gestion des erreurs ...
       // d√©marrer le serveur web sur le port 80
       server.begin();
     }

   Nous v√©rifions √©galement si la version du firmware de l'Uno R4 Wi-Fi est √† jour. Si ce n'est pas la version la plus r√©cente, une invite de mise √† niveau sera affich√©e. Vous pouvez vous r√©f√©rer √† :ref:`update_firmware` pour la mise √† niveau du firmware.

   .. code-block:: arduino

      ...
      String fv = WiFi.firmwareVersion();
      if (fv < WIFI_FIRMWARE_LATEST_VERSION) {
          Serial.println("Veuillez mettre √† jour le firmware");
      }
      ...

   Vous pouvez modifier le code suivant afin de pouvoir changer l'adresse IP par d√©faut d'Arduino.

   .. code-block:: arduino
      
      WiFi.config(IPAddress(192,48,56,2));
   

#. Fonction principale ``loop()``

   La fonction ``loop()`` dans le code Arduino effectue plusieurs op√©rations cl√©s, sp√©cifiquement :
   
   1. V√©rification si un appareil s'est connect√© ou d√©connect√© du point d'acc√®s.
   2. √âcoute des clients entrants qui font des requ√™tes HTTP.
   3. Lecture des donn√©es du client et ex√©cution des actions bas√©es sur ces donn√©es, comme allumer ou √©teindre une LED.
   
   D√©composons la fonction ``loop()`` pour rendre ces √©tapes plus compr√©hensibles.
   
   #. V√©rification de l'√©tat du Wi-Fi

      Le code v√©rifie d'abord si l'√©tat du Wi-Fi a chang√©. Si un appareil s'est connect√© ou d√©connect√©, le moniteur s√©rie affichera l'information en cons√©quence.
   
      .. code-block:: arduino
   
        if (status != WiFi.status()) {
          status = WiFi.status();
          if (status == WL_AP_CONNECTED) {
            Serial.println("Device connected to AP");
          } else {
            Serial.println("Device disconnected from AP");
          }
        }
   
   #. √âcoute des clients entrants

      ``WiFiClient client = server.available();`` attend les clients entrants.
     
      .. code-block:: arduino
   
        WiFiClient client = server.available();
   
   #. Gestion des requ√™tes clients

      √âcoute des clients entrants et leur sert la page web HTML. Lorsque l'utilisateur clique sur les liens "Cliquez ici pour allumer la LED" ou "Cliquez ici pour √©teindre la LED" sur la page web servie, une requ√™te HTTP GET est envoy√©e au serveur Arduino. Sp√©cifiquement, les URL "http://votreAdresse/H" pour allumer la LED et "http://votreAdresse/L" pour l'√©teindre seront acc√©d√©es.
  
      .. code-block:: arduino

        WiFiClient client = server.available();
        if (client) {
          // ...
          client.println("HTTP/1.1 200 OK");
          client.println("Content-type:text/html");
          client.println();
          client.print("<p style=\"font-size:7vw;\">Click <a href=\"/H\">here</a> turn the LED on<br></p>");
          client.print("<p style=\"font-size:7vw;\">Click <a href=\"/L\">here</a> turn the LED off<br></p>");
          // ...
        }
   
      Le code Arduino √©coute ces requ√™tes GET entrantes. Lorsqu'il d√©tecte ``GET /H`` √† la fin d'une ligne de texte entrante (en-t√™te HTTP), il r√®gle la LED connect√©e √† la broche 13 sur HIGH, la allumant effectivement. De m√™me, s'il d√©tecte ``GET /L``, il r√®gle la LED sur LOW, l'√©teignant.
     
      .. code-block:: arduino
   
         while (client.connected()) {            // boucle tant que le client est connect√©
           delayMicroseconds(10);                // Cela est requis pour l'Arduino Nano RP2040 Connect - sinon il bouclera si vite que le SPI ne sera jamais servi.
           if (client.available()) {             // s'il y a des octets √† lire du client,
             char c = client.read();             // lire un octet, puis
             Serial.write(c);                    // l'afficher sur le moniteur s√©rie
             if (c == '\n') {                    // si l'octet est un caract√®re de nouvelle ligne
               ...
               }
               else {      // si vous avez une nouvelle ligne, alors effacez currentLine:
                 currentLine = "";
               }
             }
             else if (c != '\r') {    // si vous avez autre chose qu'un caract√®re de retour chariot,
               currentLine += c;      // ajoutez-le √† la fin de currentLine
             }
     
             // V√©rifiez si la requ√™te client √©tait "GET /H" ou "GET /L":
             if (currentLine.endsWith("GET /H")) {
               digitalWrite(led, HIGH);               // GET /H allume la LED
             }
             if (currentLine.endsWith("GET /L")) {
               digitalWrite(led, LOW);                // GET /L √©teint la LED
             }
           }

**R√©f√©rence**

- |link_r4_wifi|
