.. note::

    Hallo und willkommen in der SunFounder Raspberry Pi & Arduino & ESP32 Enthusiasten-Gemeinschaft auf Facebook! Tauchen Sie tiefer ein in die Welt von Raspberry Pi, Arduino und ESP32 mit anderen Enthusiasten.

    **Warum beitreten?**

    - **Expertenunterst√ºtzung**: L√∂sen Sie Nachverkaufsprobleme und technische Herausforderungen mit Hilfe unserer Gemeinschaft und unseres Teams.
    - **Lernen & Teilen**: Tauschen Sie Tipps und Anleitungen aus, um Ihre F√§higkeiten zu verbessern.
    - **Exklusive Vorschauen**: Erhalten Sie fr√ºhzeitigen Zugang zu neuen Produktank√ºndigungen und exklusiven Einblicken.
    - **Spezialrabatte**: Genie√üen Sie exklusive Rabatte auf unsere neuesten Produkte.
    - **Festliche Aktionen und Gewinnspiele**: Nehmen Sie an Gewinnspielen und Feiertagsaktionen teil.

    üëâ Sind Sie bereit, mit uns zu erkunden und zu erschaffen? Klicken Sie auf [|link_sf_facebook|] und treten Sie heute bei!

.. _new_dac:

Digital-Analog-Wandler (DAC)
========================================

Das Arduino Uno R4 WiFi ist mit einem integrierten DAC (Digital-Analog-Wandler) ausgestattet. Ein DAC ist entscheidend f√ºr die Umwandlung digitaler Signale in ihre analogen Gegenst√ºcke, eine Funktionalit√§t, die besonders wichtig in Anwendungen wie der Audiobearbeitung, der Erzeugung analoger Signale und anderen Szenarien ist, die pr√§zise analoge Ausgaben erfordern.

Der DAC auf dem Uno R4 WiFi bietet eine Aufl√∂sung von bis zu 12 Bit und liefert echte analoge Ausgabef√§higkeiten, die die Leistung von PWM-Pins √ºbertreffen.

.. image:: img/05_dac.png
  :width: 70%

Musik mit DAC abspielen
+++++++++++++++++++++++++++

**Schaltplan**

.. image:: img/05_dac_bb.png
  :width: 100%
  :align: center

**Code Hochladen**

√ñffnen Sie die Datei ``05-dac.ino``, die sich unter ``elite-explorer-kit-main\r4_new_feature\05-dac`` befindet, oder f√ºgen Sie den folgenden Code in Ihre Arduino IDE ein.

.. note:: 
    Bitte platzieren Sie die Datei ``pitches.h`` im selben Verzeichnis wie den Code, um eine ordnungsgem√§√üe Funktion zu gew√§hrleisten.

.. raw:: html

   <iframe src=https://create.arduino.cc/editor/sunfounder01/93e0379e-1d2d-4d9c-a603-42b3335e8e05/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

Dieses Projekt nutzt das Arduino und den DAC (Digital-Analog-Wandler), um die ikonische Melodie von Super Mario Bros zu spielen. Es verwendet eine Bibliothek namens ``analogWave`` zur Erzeugung von Sinuswellen und eine weitere Bibliothek, ``pitches.h``, zur Definition der Notenfrequenzen.

- ``melody[]``: Dieses Array enth√§lt die zu spielenden Noten zusammen mit ihren Dauern. Noten werden durch vordefinierte T√∂ne (z.B. ``NOTE_E5``) dargestellt, und Dauern werden in Form von Schl√§gen repr√§sentiert (z.B. 4 f√ºr eine Viertelnote). Sie k√∂nnen versuchen, Ihre eigene Melodie zu komponieren, indem Sie die Noten und Dauern im Array melody[] √§ndern. Wenn Sie interessiert sind, gibt es ein Repository auf GitHub (|link_arduino_songs|), das Arduino-Code f√ºr verschiedene Lieder bereitstellt. Obwohl deren Ansatz von diesem Projekt abweichen mag, k√∂nnen Sie sich an ihren Noten und Dauern orientieren. (Ersetzen Sie einfach das ``melody[]`` im entsprechenden Track durch den Code in diesem Projekt.)

- ``tempo`` : Das Tempo f√ºr dieses Projekt ist auf 200 BPM (Beats Per Minute) eingestellt, das zur Berechnung der Dauer jeder Note verwendet wird. Die √Ñnderung dieses Werts ver√§ndert die Geschwindigkeit der Songauff√ºhrung.

- **Sinuswellengenerator**: Die Funktion ``sine`` der Bibliothek ``analogWave`` initialisiert einen 10 Hz Sinuswellengenerator, der zur Ausgabe der Noten √ºber den DAC verwendet wird.

- **Notendauer**: Basierend auf dem eingestellten Tempo und der Schlagzahl f√ºr jede Note wird die Dauer jeder Note berechnet.

- **Spielen und Pause**: Jede Note wird f√ºr 85% ihrer berechneten Dauer gespielt, gefolgt von einer 15% Pause, um zwischen den Noten zu unterscheiden.

- **Schleife**: Nachdem die Melodie abgespielt wurde, setzt der Code automatisch zur√ºck und beginnt erneut zu spielen.

Dies ist ein Beispiel, das demonstriert, wie man Arduino und externe Hardware (DAC) zur Musikgenerierung verwendet. Es zeigt auch, wie man Arrays und Schleifen verwendet, um die Logik der Musikwiedergabe zu vereinfachen.


**Referenz**

- |link_r4_dac|
