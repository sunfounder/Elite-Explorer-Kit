.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

CheerLights
===============================

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/iot_projects/05_iot_cheerlights.mp4" type="video/mp4">
      Your browser does not support the video tag.
   </video>

CheerLights est un r√©seau mondial de lumi√®res synchronis√©es qui peuvent √™tre contr√¥l√©es par n'importe qui. Rejoignez la communaut√© |link_cheerlights| de changement de couleur de LED, qui permet aux LEDs du monde entier de changer de couleur simultan√©ment. Placez vos LEDs dans un coin de votre bureau pour vous rappeler que vous n'√™tes pas seul.

Dans ce cas, nous utilisons √©galement MQTT, mais au lieu de publier nos propres messages, nous nous abonnons au sujet "cheerlights". Cela nous permet de recevoir des messages envoy√©s par d'autres personnes sur le sujet "cheerlights" et d'utiliser ces informations pour changer la couleur de notre bande LED en cons√©quence.

**Composants n√©cessaires**

Pour ce projet, nous avons besoin des composants suivants.

Il est certainement pratique d'acheter un kit complet, voici le lien :

.. list-table::
    :widths: 20 20 20
    :header-rows: 1

    *   - Nom	
        - ARTICLES DANS CE KIT
        - LIEN
    *   - Elite Explorer Kit
        - 300+
        - |link_Elite_Explorer_kit|

Vous pouvez √©galement les acheter s√©par√©ment √† partir des liens ci-dessous.

.. list-table::
    :widths: 30 20
    :header-rows: 1

    *   - INTRODUCTION DU COMPOSANT
        - LIEN D'ACHAT

    *   - :ref:`uno_r4_wifi`
        - \-
    *   - :ref:`cpn_wires`
        - |link_wires_buy|
    *   - :ref:`cpn_ws2812`
        - |link_ws2812_buy|

**C√¢blage**

.. image:: img/05_cheerlight_bb.png
    :width: 100%
    :align: center

**Sch√©ma**

.. image:: img/05_cheerlight_schematic.png
    :width: 50%
    :align: center

.. raw:: html

   <br/>

**Installer la biblioth√®que**

Pour installer la biblioth√®que, utilisez le gestionnaire de biblioth√®ques Arduino et recherchez "ArduinoMqttClient" et "FastLED" et installez-les.

``ArduinoMqttClient.h``: Utilis√© pour la communication MQTT.

``FastLED.h``: Utilis√© pour piloter la bande LED RGB.

.. important::
    Avec la sortie de |link_fastled_3_7_0|, la biblioth√®que FastLED prend d√©sormais en charge officiellement l'Arduino UNO R4. Vous n'avez donc plus besoin d'installer manuellement la version de d√©veloppement. Mettez simplement √† jour ou installez la biblioth√®que FastLED en utilisant le gestionnaire de biblioth√®ques Arduino.

.. warning::
    **[P√©rim√©]** √âtant donn√© que la biblioth√®que |link_FastLED_lib| n'a pas encore publi√© officiellement une version prenant en charge l'Arduino R4, vous devrez t√©l√©charger :download:`la derni√®re version de d√©veloppement de la biblioth√®que FastLED <https://codeload.github.com/FastLED/FastLED/zip/refs/heads/master>` et remplacer les fichiers existants de la biblioth√®que FastLED. Pour des instructions d√©taill√©es sur la fa√ßon de le faire, veuillez vous r√©f√©rer √† la section :ref:`manual_install_lib`. (Cette note sera retir√©e lorsque la biblioth√®que FastLED publiera officiellement une mise √† jour prenant en charge l'Arduino UNO R4.)

**Ex√©cuter le code**


.. note::

    * Vous pouvez ouvrir le fichier ``05_cheerlight.ino`` sous le chemin ``elite-explorer-kit-main\iot_project\05_cheerlight`` directement.
    * Ou copier ce code dans Arduino IDE.

.. note::
    Dans le code, le SSID et le mot de passe sont stock√©s dans ``arduino_secrets.h``. Avant de t√©l√©charger cet exemple, vous devez les modifier avec vos propres identifiants WiFi. De plus, pour des raisons de s√©curit√©, assurez-vous que ces informations restent confidentielles lors du partage ou du stockage du code.

.. raw:: html

   <iframe src=https://create.arduino.cc/editor/sunfounder01/9d7ad736-9725-499f-a6ea-91602120d53e/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>

**Contr√¥ler les appareils @CheerLights mondiaux**

#. Rejoignez le |link_discord_server| et utilisez le bot CheerLights pour d√©finir la couleur. Tapez simplement ``/cheerlights`` dans n'importe quel canal du **serveur Discord CheerLights** pour activer le bot.

   .. image:: img/05_iot_cheerlights_1.png

#. Suivez les instructions fournies par le bot pour d√©finir la couleur. Cela vous permettra de contr√¥ler les appareils CheerLights dans le monde entier.

   .. image:: img/05_iot_cheerlights_2.png

**Comment √ßa marche ?**

Voici les principales parties du code et leurs fonctions :

1. Inclure les biblioth√®ques requises :

   * ``WiFiS3.h`` : Utilis√© pour g√©rer les connexions Wi-Fi.
   * ``ArduinoMqttClient.h`` : Utilis√© pour g√©rer les connexions MQTT.
   * ``FastLED.h`` : Utilis√© pour contr√¥ler les bandes LED NeoPixel.

2. D√©finir quelques constantes :

   * ``NUM_LEDS`` : Le nombre de LEDs sur la bande LED.
   * ``DATA_PIN`` : La broche de donn√©es connect√©e √† l'Arduino pour contr√¥ler la bande LED.
   * ``arduino_secrets.h`` : Fichier en-t√™te contenant le nom et le mot de passe du r√©seau Wi-Fi pour prot√©ger les informations sensibles.
   * ``broker`` : Adresse du serveur MQTT.
   * ``port`` : Port du serveur MQTT.
   * ``topic`` : Le sujet MQTT auquel s'abonner.

3. D√©finir quelques variables globales :

   * ``CRGB leds[NUM_LEDS]`` : Un tableau pour stocker les donn√©es de couleur des LEDs.
   * ``colorName`` : Un tableau de noms de couleurs pris en charge par le projet CheerLights.
   * ``colorRGB`` : Un tableau de codes de couleurs RGB correspondant aux noms de couleurs.

4. Fonction ``setup()`` :

   * Initialiser la communication s√©rie.
   * V√©rifier si le module Wi-Fi est pr√©sent et afficher sa version du firmware.
   * Tenter de se connecter au r√©seau Wi-Fi ; si cela √©choue, attendre 10 secondes et r√©essayer.
   * Apr√®s une connexion r√©ussie, se connecter au broker MQTT (serveur) et s'abonner au sujet sp√©cifi√©.
   * Initialiser la bande LED NeoPixel.

5. Fonction ``loop()`` :

   * Appeler p√©riodiquement la fonction ``mqttClient.poll()`` pour recevoir les messages MQTT et envoyer des signaux keep-alive MQTT.
   * Ajouter un d√©lai de 5 secondes pour √©viter une connexion continue.

6. Les fonctions ``printWifiData()`` et ``printCurrentNet()`` sont utilis√©es pour afficher les informations sur le r√©seau Wi-Fi et la connexion.

7. La fonction ``printMacAddress()`` est utilis√©e pour imprimer l'adresse MAC au format hexad√©cimal.

8. La fonction ``onMqttMessage()`` est une fonction de rappel d√©clench√©e lorsqu'un message MQTT est re√ßu. Elle affiche le sujet et le contenu du message re√ßu, convertissant le contenu du message en minuscules. Si le sujet est "cheerlights", elle appelle la fonction ``setColor()`` pour d√©finir la couleur de la bande LED.

9. La fonction ``setColor()`` prend un nom de couleur comme param√®tre, puis cherche une couleur correspondante dans le tableau ``colorName``. Si une couleur correspondante est trouv√©e, elle d√©finit la couleur de la bande LED sur la valeur RGB correspondante et met √† jour la couleur de la bande LED en utilisant la fonction ``FastLED.show()``.

