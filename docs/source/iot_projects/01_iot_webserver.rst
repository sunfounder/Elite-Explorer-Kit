.. note::

    Bonjour, bienvenue dans la communaut√© des passionn√©s de SunFounder Raspberry Pi, Arduino et ESP32 sur Facebook ! Plongez dans l'univers du Raspberry Pi, Arduino et ESP32 avec d'autres passionn√©s.

    **Pourquoi nous rejoindre ?**

    - **Support d'experts** : R√©solvez les probl√®mes apr√®s-vente et les d√©fis techniques avec l'aide de notre communaut√© et de notre √©quipe.
    - **Apprendre et partager** : √âchangez des astuces et des tutoriels pour am√©liorer vos comp√©tences.
    - **Aper√ßus exclusifs** : Acc√©dez en avant-premi√®re aux annonces de nouveaux produits et aux avant-premi√®res.
    - **R√©ductions exclusives** : Profitez de r√©ductions exclusives sur nos produits les plus r√©cents.
    - **Promotions festives et cadeaux** : Participez √† des concours et des promotions festives.

    üëâ Pr√™t √† explorer et cr√©er avec nous ? Cliquez sur [|link_sf_facebook|] et rejoignez-nous d√®s aujourd'hui !

Serveur Web Simple
===========================

.. raw:: html

   <video loop autoplay muted style = "max-width:100%">
      <source src="../_static/videos/new_feature_projects/wifi.mp4"  type="video/mp4">
      Your browser does not support the video tag.
   </video>

Ce programme Arduino simple est con√ßu pour cr√©er un serveur web WiFi de base, permettant aux utilisateurs de contr√¥ler l'√©tat d'allumage et d'extinction d'une LED sur la carte Arduino via un navigateur web.

**Ex√©cution du code**

.. note::

    * Vous pouvez ouvrir le fichier ``01_simple_webserver.ino`` sous le chemin ``elite-explorer-kit-main\iot_project\01_simple_webserver`` directement.
    * Ou copiez ce code dans l'IDE Arduino.

.. note::
    Dans le code, le SSID et le mot de passe sont stock√©s dans ``arduino_secrets.h``. Avant de t√©l√©charger cet exemple, vous devez les modifier avec vos propres identifiants WiFi. De plus, pour des raisons de s√©curit√©, assurez-vous que ces informations restent confidentielles lors du partage ou du stockage du code.

.. raw:: html

   <iframe src=https://create.arduino.cc/editor/sunfounder01/7ed8f58d-2ed8-4dc9-82cb-7e49b6977ea1/preview?embed style="height:510px;width:100%;margin:10px 0" frameborder=0></iframe>


Apr√®s avoir t√©l√©charg√© le code, vous pourrez voir l'adresse IP dans le moniteur s√©rie. Vous pouvez entrer cette adresse IP dans votre navigateur web pour allumer/√©teindre la LED int√©gr√©e.

.. image:: img/01_webserver.png

**Comment √ßa fonctionne ?**

Voici une explication du code :

1. Fichiers d'en-t√™te et variables globales :

   * ``#include "WiFiS3.h"`` : Inclut la biblioth√®que WiFi pour se connecter et g√©rer le WiFi. Cette biblioth√®que est incluse avec Arduino UNO R4 Core, donc aucune installation suppl√©mentaire n'est requise.
   * ``#include "arduino_secrets.h"`` : Inclut les donn√©es sensibles de connexion WiFi telles que le SSID et le mot de passe.
   * ``ssid``, ``pass``, ``keyIndex`` : Ces √©l√©ments sont les identifiants r√©seau utilis√©s pour la connexion WiFi.
   * ``led``, ``status``, ``server`` : D√©finissent la broche de la LED, le statut WiFi et l'objet serveur web.

2. ``setup()`` :

   * Commence la communication s√©rie.
   * V√©rifie la pr√©sence du module WiFi.
   * V√©rifie si la version du firmware du module WiFi est √† jour.
   * Tente de se connecter au r√©seau WiFi.
   * D√©marre le serveur web.
   * Imprime le statut WiFi.

3. ``loop()`` :

   * V√©rifie les nouvelles connexions des clients web.
   * S'il y a des connexions clients, lit leurs requ√™tes HTTP entrantes.
   * En fonction des requ√™tes, vous pouvez contr√¥ler l'√©tat d'allumage/extinction de la LED. Par exemple, si la requ√™te est "GET /H", elle allume la LED ; si c'est "GET /L", elle √©teint la LED.
   * Envoie une r√©ponse HTTP pour instruire l'utilisateur sur la mani√®re de contr√¥ler la LED.
   * D√©connecte le client.

4. ``printWifiStatus()`` :

   * Imprime le SSID WiFi connect√©.
   * Imprime l'adresse IP de la carte Arduino.
   * Imprime la force du signal re√ßu.
   * Explique comment visualiser cette page dans un navigateur web.

